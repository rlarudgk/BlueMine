<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags"
	prefix="security"%>
<security:authentication property="principal.realMember" var="authMember"/>
<main class="content" style="padding-top:0px;">
	<div class="container-fluid p-0">
		<div class="row">
			<!--====================== 칸반보드 상단 바 ======================-->
			<div class="col-12">
				<div class="card">
					<div class="card-header">
						<h2 class="card-title mb-0">프로젝트 작업 목록</h2>
					</div>
					<div class="card-body">
						
					</div>
				</div>
			</div>
		
			<!--====================== 칸반보드 컨텐츠 ======================-->
			<div class="col-12 col-lg-6 col-xl-3">
				<!--=========== 오늘 시작 전 작업  ==========-->
				<div id="kWorkBeforeState" class="card  kanvanWorkState" draggable="true" ondrop="dragend(event)" ondragstart="drag(event)">
					<div class="card-header">
						<h5 class="card-title">시작 전 작업</h5>
					</div>
					<div class="card-body">
						<div id="kWorkBeforeDisp" style="min-height:50px;" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
						<div class="d-grid">
							<!-- <a href="#" class="btn btn-primary">작업 추가</a> -->
							<a class="btn btn-primary btn-sm projectWorkInsertBtn" data-bs-toggle="modal" data-bs-target="#projectWorkInsertModal"
								data-work-no="\${data.workNo}">
								작업 추가
							</a>
						</div>
					</div>
				</div>
			</div>
			<div class="col-12 col-lg-6 col-xl-3">
				<!--=========== 오늘 진행 작업  ==========-->
				<div id="kWorkIngState" class="card kanvanWorkState"  draggable="true" ondrop="dragend(event)" ondragstart="drag(event)">
					<div class="card-header">
						<h5 class="card-title">진행 작업</h5>
					</div>
					<div class="card-body">
						<div id="kWorkIngDisp" style="min-height:50px;" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
					</div>
				</div>
			</div>
			<div class="col-12 col-lg-6 col-xl-3">
				<!--=========== 오늘 이슈 작업  ==========-->
				<div id="kWorkIssueState" class="card kanvanWorkState"  draggable="true" ondrop="dragend(event)" ondragstart="drag(event)">
					<div class="card-header">
						<h5 class="card-title">이슈 작업</h5>
					</div>
					<div class="card-body">
						<div id="kWorkIssueDisp" style="min-height:50px;" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
					</div>
				</div>
			</div>
			<div class="col-12 col-lg-6 col-xl-3">
				<!--=========== 오늘 종료 작업  ==========-->
				<div id="kWorkEndState" class="card kanvanWorkState"  draggable="true" ondrop="dragend(event)" ondragstart="drag(event)">
					<div class="card-header">
						<h5 class="card-title">종료 작업</h5>
					</div>
					<div class="card-body">
						<div id="kWorkEndDisp" style="min-height:50px;" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
					</div>
				</div>
			</div>
		</div>
		
		
		<!--====================== 작업 Detail ======================-->
		<div class="modal fade" id="projectWorkDetailModal" tabindex="-1" style="display: none;" aria-hidden="true">
			<div class="modal-dialog modal-dialog-centered modal-xl" role="document">
				<div class="modal-content" id="projectWorkSelectDetailDisp">
					<div class="modal-header">
						<h5 class="modal-title">작업 자세히보기</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body row">
						<div class="col-md-8 col-xl-8">
							<!--=========== 작업 Detail Form  ==========-->
							<form name="dataForm" class="projectWorkDetailForm">
								<table class="table table-bordered">
									<tr>
										<th>작업 번호</th>
										<td>
											<input type="text" id="workNo" name="workNo" Class="form-control" value="\${work.workNo}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>프로젝트 번호</th>
										<td>
											<input type="text" id="proCode" name="proCode" Class="form-control" value="\${work.proCode}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>작업 상위 번호</th>
										<td>
											<input type="text" id="workPntNo" name="workPntNo" Class="form-control" value="\${work.workPntNo}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>작업 작성자</th>
										<td>
											<input type="text" id="memEmail" name="memEmail" Class="form-control" value="\${work.memEmail}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>작업 제목</th>
										<td>
											<input type="text" id="workTitle" name="workTitle" Class="form-control workUpdateReadonlyOn" value="\${work.workTitle}" />
										</td>
									</tr>
									<tr>
										<th>
											담당자 별 작업 상태
										</th>
										<td id="workDetialChargerListDisp"></td>
									</tr>
									<tr>
										<th>작업 상태</th>
										<td>
											<select id="workOrderCdSelect" id="workStateCd" name="workStateCd" class="form-control workUpdateReadonlyOn">
												<option value="WS001">시작전</option>
												<option value="WS002">진행중</option>
												<option value="WS003">이슈발생</option>
												<option value="WS004">보류</option>
												<option value="WS005">종료</option>
											</select>
										</td>
									</tr>
									<tr>
										<th>작업 중요도</th>
										<td>
											<select id="workStateCdSelect" id="workOrderCd" name="workOrderCd" class="form-control workUpdateReadonlyOn">
												<option value="WO001">낮음</option>
												<option value="WS002">보통</option>
												<option value="WS003">높음</option>
											</select>
										</td>
									</tr>
									<tr>
										<th>작업 시작 날짜</th>
										<td>
											<input type="date" id="workSdate" name="workSdate" value="\${work.workSdate}" class="form-control workUpdateReadonlyOn"/>
										</td>
									</tr>	
									<tr>
										<th>작업 종료 날짜</th>
										<td>
											<input type="date" id="workEdate" name="workEdate" value="\${work.workEdate}" class="form-control workUpdateReadonlyOn"/>
										</td>
									</tr>
									<tr>
										<th>작업 내용</th>
										<td>
											<input class="workUpdateReadonlyOn" type="text" id="workDetail" name="workDetail" Class="form-control" value="\${work.workDetail}"/>
										</td>
									</tr>
								</table>
							</form>
						</div>
						<!--=========== 작업 댓글 ==========-->
						<div class="col-md-4 col-xl-4">
							<section class="mb-5" style="height:100%;">
			                    <div class="card bg-light" style="height:100%;">
			                        <div class="card-body d-flex flex-column justify-content-between">
			                            <!-- Single comment-->
			                            <div id="projectWorkDetailCommDisp"></div>

			                            <!-- Comment form-->
			                            <div>
				                            <form class="mb-4" id="workCommInsertForm">
				                            	<input type="hidden" id="workCommWorkNo" name="workNo" value=""> 
				                            	<input type="hidden" name="memEmail" value="${authMember.memEmail }">
				                            	<textarea name="workCommCont" class="form-control" rows="3" placeholder="댓글 작성"></textarea>
				                            	<div class="d-flex justify-content-end pt-2">
				                            		<a id="workCommInsertBtn" class="btn btn-primary">작성</a>
				                            	</div>
				                            </form>
			                            </div>
			                        </div>
			                    </div>
			                </section>
						</div>
					</div>
					<div class="modal-footer d-flex justify-content-end align-items-center">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
		</div>
		
		
		<!--====================== 작업 추가 Form ======================-->
		<div class="modal fade" id="projectWorkInsertModal" tabindex="-1" style="display: none;" aria-hidden="true">
			<div class="modal-dialog modal-dialog-centered modal-xl" role="document">
				<div class="modal-content" id="projectWorkSelectDetailDisp">
					<div class="modal-header">
						<h5 class="modal-title">작업 추가하기</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body row">
						<div class="col-md-12 col-xl-12">
							<!--=========== 작업 추가 Form  ==========-->
							<form class="projectWorkAddForm">
								<input type="hidden" name="proCode" value="${project.proCode }">
								<table class="table table-bordered">
									<tr>
										<th rowspan="2">
											상위 작업
										</th>
										<td>
											<!-- <input type="text" name="workPntNo" Class="form-control"  /> -->
											<select id="PWAworkPntNo">
												<option value="0">상위 작업 선택</option>
											</select>
										</td>
									</tr>	
									<tr>
										<td>
											<div id="projectWorkPntNoSelectDisp" class="d-flex justify-content-start align-items-center p-2">상위작업이 없습니다.</div>
										</td>
									<tr>
									<tr>
										<th>
											작업 제목
										</th>
										<td>
											<input type="text" name="workTitle" Class="form-control"  />
										</td>
									</tr>	
									<tr>
										<th>
											작업 작성자
										</th>
										<td>
											<span style="padding:8px;">${authMember.memEmail }</span><input type="hidden" name="memEmail" Class="form-control" value="${authMember.memEmail }" />
										</td>
									</tr>	
									<tr>
										<th rowspan="2">
											담당자 선택
										</th>
										<td>
											<select id="PWAParticipateMemEmail">
												<option value="0">담당자 없음</option>
											</select>
										</td>
									
									</tr>	
									<tr>
										<td>
											<div id="projectWorkMemberSelectListDisp" class="d-flex justify-content-start align-items-center p-2">담당자가 없습니다.</div>
										</td>
									<tr>
										<th>작업 시작 날짜</th>
										<td>
											<input type="date" name="workSdate" class="form-control"/>
										</td>
									</tr>
									<tr>
										<th>작업 상태</th>
										<td>
											<select name="workStateCd" class="form-control">
												<option value="WS001" selected>시작전</option>
												<option value="WS002">진행중</option>
												<option value="WS003">이슈발생</option>
												<option value="WS004">보류</option>
												<option value="WS005">종료</option>
											</select>
										</td>
									</tr>
									<tr>
										<th>작업 우선순위</th>
										<td>
											<select name="workOrderCd" class="form-control">
												<option value="WO001" selected>낮음</option>
												<option value="WS002">보통</option>
												<option value="WS003">높음</option>
											</select>
										</td>
									</tr>
									<tr>
										<th>작업 종료 날짜</th>
										<td>
											<input type="date" name="workEdate" class="form-control"/>
										</td>
									</tr>
									<tr>
										<th>작업 내용</th>
										<td>
										    <textarea name="workDetail" rows="10" cols="80"></textarea>
										</td>
									</tr>
								</table>
								<div class="d-flex justify-content-end">
									<a id="projectWorkAddBtn" class="btn btn-primary">작업 등록</a>
								</div>
							</form>
						</div>

					</div>
					<div class="modal-footer d-flex justify-content-end align-items-center">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
		</div>
		
		<!-- 상위 작업 선택 모달창 -->
		<div class="modal fade" id="projectWorkPntNoModal" tabindex="-2" style="display: none;" aria-hidden="true">
			<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
				<div class="modal-content">
					<form id="projectWorkPntNoForm">
						<div class="modal-header">
							<h5 class="modal-title">작업 배정 멤버 선택</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<table class="table">
								<thead>
									<tr>
										<th style="width: 10%">체크</th>
										<th>작업 번호</th>
										<th>작업 제목</th>
									</tr>
								</thead>
								<tbody id="projectWorkPntNoDisp"></tbody>
							</table>
						</div>
						<div class="modal-footer d-flex justify-content-end align-items-center">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
							<button id="projectWorkPntNoAddBtn" type="button" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
						</div>
					</form>
				</div>
			</div>
		</div>
			
	</div>
</main>


<script>
	

	
	/******************** HTML, 템플릿 ********************/
	// 오늘 작업 html
	function f_TodayWorkHtml(data){
		let todayWorkHtml = "";
		todayWorkHtml += `
				<div class="card mb-3 bg-light cursor-grab border dragWork" id="\${data.workNo}" draggable="true" ondrop="dragend(event)" ondragstart="drag(event)">
					<div class="card-body p-3">
						<div class="float-end me-n2">
							<label class="form-check">
								<input type="checkbox" class="form-check-input">
								<span class="form-check-label d-none">Checkbox</span>
							</label>
						</div>
						<h5>\${data.workTitle}</h5>
						<p>\${data.workDetail}</p>
						<p class="kanbanWorkStateCd">\${data.workStateCd}</p>
						<div class="float-end mt-n1">
							<img src="/Setting/resources/images/pms/800.png" width="32" height="32" class="rounded-circle" alt="Avatar">
						</div>
						<a class="btn btn-primary btn-sm projectWorkDetailBtn" data-bs-toggle="modal" data-bs-target="#projectWorkDetailModal"
							data-work-no="\${data.workNo}">
							자세히 보기
						</a>
					</div>
				</div>
				`
		return todayWorkHtml;
	}
	
	// 작업 자세히보기 : 담당자 목록 html
	function f_WorkChargerListHtml(data){
		let workChargerListHtml = "";
			for (var j = 0; j < data.workChargerList.length; j++) {
				workChargerListHtml += `
					<p>
						<input type="text" name="workChargerListMemEmail" value="\${data.workChargerList[j].memEmail}" readonly="readonly"/>
						<div class="progress progress-sm workUpdateReadonlyOn">
							<div class="progress-bar" id="bar\${j}" role="progressbar" aria-valuemin="0" data-cnt="bar\${j}" aria-valuemax="100" aria-valuenow="\${data.workChargerList[j].workProgress}" style="width:\${data.workChargerList[j].workProgress}%;"></div>
						</div>
						<select name="workChargerListProgress" id="\${j}" class="form-control workUpdateReadonlyOn">
							<option value="\${data.workChargerList[j].workProgress}" selected>\${data.workChargerList[j].workProgress}</option>
							<option value="10">10%</option>
							<option value="20">20%</option>
							<option value="30">30%</option>
							<option value="40">40%</option>
							<option value="50">50%</option>
							<option value="60">60%</option>
							<option value="70">70%</option>
							<option value="80">80%</option>
							<option value="90">90%</option>
							<option value="100">100%</option>
						</select>
					</p>
				`;	
			}
		return workChargerListHtml;
	}
	
	// 작업 댓글 html				
	function f_WorkDetailCommListHtml(data){
		let workDetailCommListHtml = "";
			for (var i = 0; i < data.length; i++) {
				workDetailCommListHtml +=`
                    <div class="d-flex" >
						<div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
				        <div class="ms-3">
				            <div class="fw-bold">\${data[i].memEmail}</div>
				            	\${data[i].workCommCont}
				        </div>
			        </div>
                    <hr>
	        	`
			}
		return workDetailCommListHtml;
	}
	/*************************************************/
	
	


	/******************** Data + 템플릿  Ajax ********************/
	// 오늘 작업 할 작업 목록
	let kWorkBeforeDisp = $("#kWorkBeforeDisp");
	function f_TodayWorkListView(){
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/todayWorkList/${project.proCode }",
			dataType : "json",
			success : function(resp) {
				
				$("#kWorkBeforeDisp").empty();
				$("#kWorkIngDisp").empty();
				$("#kWorkIssueDisp").empty();
				$("#kWorkEndDisp").empty();
				
				let trTagsBefore = [];
				let trTagsIng = [];
				let trTagsIssue = [];
				let trTagsEnd = [];
				
				for(var i=0; i<resp.length; i++){
					if(resp[i].workStateCd == "WS001"){
						trTagsBefore.push(f_TodayWorkHtml(resp[i]));						
					}else if(resp[i].workStateCd == "WS002"){
						trTagsIng.push(f_TodayWorkHtml(resp[i]));	
					}else if(resp[i].workStateCd == "WS003"){
						trTagsIssue.push(f_TodayWorkHtml(resp[i]));	
					}else if(resp[i].workStateCd == "WS005"){
						trTagsEnd.push(f_TodayWorkHtml(resp[i]));	
					}
				}
				$("#kWorkBeforeDisp").html(trTagsBefore);
				$("#kWorkIngDisp").html(trTagsIng);
				$("#kWorkIssueDisp").html(trTagsIssue);
				$("#kWorkEndDisp").html(trTagsEnd);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}

	// 작업 자세히보기 ( 작업 눌렀을 때 Detail 템플릿 적용 )
	$(document).on("click",".projectWorkDetailBtn",function(){

		let proCode = "${project.proCode}";
		let workNo = $(this).data("workNo");	
		let data = {"proCode":proCode,"workNo":workNo};

		$.ajax({
			url:"${pageContext.request.contextPath}/project/project/kanban/workDetail",
			contentType:"application/json;charset=utf-8",
			data:JSON.stringify(data),
			type:"post",
			dataType:"json",
			success : function(res) {
				$("#workNo").val(res.workNo);
				$("#proCode").val(res.proCode);
				$("#workPntNo").val(res.workPntNo);
				$("#memEmail").val(res.memEmail);
				$("#workTitle").val(res.workTitle);
				$("#workDetialChargerListDisp").html(f_WorkChargerListHtml(res));
				if($("#workOrderCdSelect").val() == res.workOrderCdSelect){
					$("#workOrderCdSelect").val().attr("selected", "selected");
				}
				if($("#workStateCdSelect").val() == res.workStateCdSelect){
					$("#workOrderCdSelect").val().attr("selected", "selected");
				}
				$("#workSdate").val(res.workSdate);
				$("#workEdate").val(res.workEdate);
				$("#workDetail").val(res.workDetail);
				
				$("#workCommWorkNo").val(res.workNo);
				
				f_WorkCommListView(res.workNo);
			},
			error : function(xhr, error, msg) {
				ajaxError(xhr, error, msg);
			}
		});
	});
	
	
	// 작업 댓글 달기
	$("#workCommInsertBtn").on("click",function(){
		console.log("hi");
		let data = $("#workCommInsertForm").serialize();
		console.log(data);
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workCommInsert",
			method : "post",
			data : data,
			dataType : "json",
			success : function(resp) {
				let workNo = resp + "";
				f_WorkCommListView(workNo);
				$("textarea[name=workCommCont]").val('');
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	
	// 작업 수정
	$(document).on("input",".projectWorkDetailForm",function(){
		let data = new Object();
		let cnt = 0;
		let dataObject = {};
		data = fn_seri($(".projectWorkDetailForm")[0]);
		let workNoData = data.workNo;
		let workProgressList = data.workChargerListProgress;
		let workProgressMemEmail = data.workChargerListMemEmail;

		// 만약에 배열이 아니라면 그대로 객체에 넣는다.
		if(Array.isArray(workProgressList)){            		
			delete data.workChargerListProgress;
			delete data.workChargerListMemEmail;      		
			let workChargerList = [];
			for(let i=0; i<workProgressMemEmail.length; i++){
				let workChargerData = {};
				workChargerData['workNo'] = workNoData;
				workChargerData['memEmail'] = workProgressMemEmail[i];
				workChargerData['workProgress'] = workProgressList[i];
				$("#bar"+i).css("width",workProgressList[i]+"%");
				workChargerList.push(workChargerData);
				data['workChargerList'] = workChargerList;
			}
    	}else{
    		let workChargerList = [];
    		let workChargerData = {};
			workChargerData['workNo'] = workNoData;
			workChargerData['memEmail'] = workProgressMemEmail;
			workChargerData['workProgress'] = workProgressList;
			$("#bar"+0).css("width",workProgressList+"%");
			workChargerList.push(workChargerData);
			data['workChargerList'] = workChargerList;
    	}
		
 		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workUpdate",
			method : "post",
			data : JSON.stringify(data),
			contentType : "application/json;charset=utf-8;",
			success : function(resp) {
				console.log(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});  
	});
	/*************************************************/
	
	
	
	/******************** Data 불러오는 Ajax ********************/
	// 작업 댓글 목록 가져오기
	function f_WorkCommListView(workNo){
		let data = {"workNo" : workNo};
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workCommList",
			method : "post",
			data: JSON.stringify(data),
			contentType:"application/json;charset=utf-8",
			dataType : "json",
			success : function(resp) {
				console.log("댓글",resp);
				console.log(resp.length == 0);
				if(resp.length == 0){
					$("#projectWorkDetailCommDisp").html('<p>댓글이 없습니다.</p><hr>')
				}else{					
					$("#projectWorkDetailCommDisp").html(f_WorkDetailCommListHtml(resp));
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	} 
	
	// 프로젝트 전체 목록 데이터
	function projectWorkListData(){
		let retval;
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workListView/${project.proCode}",
			method : "get",
			dataType : "json",
			async :false,
			success : function(resp) {
				console.log(resp);
				retval = resp;
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		return retval;
	}
	
	// 프로젝트 참여 멤버 목록 데이터
	function projectParticipateMemberListData(){
		let retval;
		$.ajax({
			url : "${pageContext.request.contextPath }/project/project/management/memberManagementList/${project.proCode }",
			method : "get",
			dataType : "json",
			async :false,
			success : function(resp) {
					console.log(resp.yes);
					retval = resp.yes;
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		})
		return retval;
	}
	/*************************************************/
	
	
	
	/******************** 공통 함수 시작 ******************/
	// form에 name에 있는 데이터 data Object로 만들어주는 함수
	function fn_seri(myForm){
	    let elems = myForm.elements
	    console.log("elems",elems);
	    let myObj = {}
	    for(let i=0; i<elems.length; i++){
	    	// myObj객체에 key값으로 elems[i].name가 있는지 없는지 여부
	        if(myObj.hasOwnProperty(elems[i].name)){
	        	// Array.isArray() 메서드는 인자가 Array인지 판별합니다.
	        	if(Array.isArray(myObj[elems[i].name])){            		
	        	}else{            		
	        		// 중복되는 name이 있다면 배열로 만들어준다.
		          	let array = [myObj[elems[i].name]]
		          	array.push(elems[i].value);
		          	myObj[elems[i].name] = array;
	        	}
	        }else{
	          myObj[elems[i].name] = elems[i].value;
	        }
	    }
		return myObj;
	}
	/********************* 공통 함수 끝 *******************/
	
	
	/******************** 기타 function ********************/
	// 간트차트 이동 시 발생되는 이벤트
	function drag(ev) {
	    ev.dataTransfer.setData("text", ev.target.id);
	}
	function allowDrop(ev) {
	    ev.preventDefault();
	}
	function drop(ev) {
	    ev.preventDefault();
	    var data = ev.dataTransfer.getData("text");
	    ev.currentTarget.appendChild(document.getElementById(data));
	}
	function dragend(ev){
		ev.preventDefault();
		
		let workState = ""; 
		let workNo = ev.dataTransfer.getData("text");
		// 해당 id가 있는 Node를 찾아서 그 Node의 id가 일치하는지 비교
		if(ev.target.closest('.kanvanWorkState').id == "kWorkBeforeState"){
			workState = "WS001";
		}else if(ev.target.closest('.kanvanWorkState').id == "kWorkIngState"){
			workState = "WS002";
		}else if(ev.target.closest('.kanvanWorkState').id == "kWorkIssueState"){
			workState = "WS003";
		}else{
			workState = "WS005";
		}
		
		let workVO = { "workNo" : workNo, "workStateCd" : workState};
		
		// 작업 상태 변경
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workStateCdUpdate",
			method : "post",
			data:JSON.stringify(workVO),
			contentType : "application/json;charset=utf-8;",
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				f_TodayWorkListView();
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}
	/****************** 기타 function 끝 ******************/
	

	

	
	/******************** 작업 추가 시작 ********************/
	
	// 작업 상위 번호 선택 select
    let selectEl = document.querySelector("#PWAworkPntNo");
	// 작업 멤버 리스트 선택 select
	let selectMemEmail = document.querySelector("#PWAParticipateMemEmail");
	
	// 작업 추가 )
	// 프로젝트 참여 멤버 목록 불러오기
	function f_workMemberList(){
		let memberList = projectParticipateMemberListData();
		 $('#PWAParticipateMemEmail option').remove();
		    
		let workMemberListSelectDefulat = document.createElement("option");
		workMemberListSelectDefulat.text = "담당자 선택";
		workMemberListSelectDefulat.value = "0";
		selectMemEmail.options.add(workMemberListSelectDefulat);
			
		let isWorkMemberInputFind = $(".isWorkMember").find("input");
		let isWorkMembers = [];
		for(let i=0; i<isWorkMemberInputFind.length; i++){
			isWorkMembers.push(isWorkMemberInputFind[i].dataset.workIs);
		}
		
	 	for(let i=0; i<memberList.length; i++){
	 		if(isWorkMembers.indexOf(memberList[i].memEmail) < 0){
	 			let objOption = document.createElement("option");
			    objOption.text = memberList[i].memEmail;
			    objOption.value = memberList[i].memEmail;
			    selectMemEmail.options.add(objOption);
	 		}
	    } 
	}
	
	// 작업 추가 )
	// 작업 추가 버튼 눌렀을 때 프로젝트 안에 작업 목록 불러오기
	$(".projectWorkInsertBtn").on("click", function(){
		let workList = projectWorkListData();
		$('#PWAworkPntNo option').remove();
		// 프로젝트 전체 목록 select문에 option으로 생성
		let workPntNoSelectDefulat = document.createElement("option");
		workPntNoSelectDefulat.text = "상위작업 없음";
		workPntNoSelectDefulat.value = "0";
		selectEl.options.add(workPntNoSelectDefulat);
		
	    for(let i=0; i<workList.length; i++){
	    	let objOption = document.createElement("option");
		    objOption.text = workList[i].workNo + " 번";
		    objOption.value = workList[i].workNo;
		    selectEl.options.add(objOption);
	    }
		
	    f_workMemberList();
	});                                                                                                                                                      

	// 작업 추가 ) 
	// 상위 작업 추가 할 때마다 발생하는 이벤트
    $("#PWAworkPntNo").on("change",function(){
    	let selectValue = selectEl.options[selectEl.selectedIndex].value;  
    	console.log(selectValue);
    	if(selectValue == "0"){			
    		$("#projectWorkPntNoSelectDisp").empty();
    		$("#projectWorkPntNoSelectDisp").html("상위 작업이 없습니다.");
		}else{
			$("#projectWorkPntNoSelectDisp").empty();
	    	$("#projectWorkPntNoSelectDisp").html(`
    			<div class="me-4 isWorkPntNo">
					<input name="workPntNo" type="hidden" value="\${selectValue}">
					<div class="btn btn-square btn-primary btn-sm isWorkPntNoRemoveBtn"><span>\${selectValue}</span></div>
					<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkPntNoRemoveBtn"><span>X</span></div>
				</div>
				`);
		}
    	
    			
    });
    
	// 작업 추가 )
	// 작업 담당자 선택 할 때 발생하는 이벤트
    $("#PWAParticipateMemEmail").on("change",function(){
    	
    	let selectValue = selectMemEmail.options[selectMemEmail.selectedIndex].value;
    	console.log("sdsd",selectValue);
    	let projectWorkMemberSelectListDisp = $("#projectWorkMemberSelectListDisp");
		if(selectValue == "0"){			
	    	projectWorkMemberSelectListDisp.empty();
			projectWorkMemberSelectListDisp.html("담당자가 없습니다.");
		}else if(projectWorkMemberSelectListDisp.html() == "담당자가 없습니다."){
			projectWorkMemberSelectListDisp.empty();
	    	$("#projectWorkMemberSelectListDisp").html(`
		   			<div class="me-4 isWorkMember">
		    			<input type="hidden" data-work-Is="\${selectValue}">
		    			<div class="btn btn-square btn-primary btn-sm isWorkMemberRemoveBtn"><span>\${selectValue}</span></div>
		    			<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkMemberRemoveBtn"><span>X</span></div>
		   			</div>
	   			`);
		}else{
	    	$("#projectWorkMemberSelectListDisp").append(`
	   			<div class="me-4 isWorkMember">
	    			<input type="hidden" data-work-Is="\${selectValue}">
	    			<div class="btn btn-square btn-primary btn-sm isWorkMemberRemoveBtn"><span>\${selectValue}</span></div>
	    			<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkMemberRemoveBtn"><span>X</span></div>
	   			</div>
   			`);
		}
		f_workMemberList();

    });
    // 작업 추가 )
	// 작업 담당자 목록에서 담당자 삭제하기
	$(document).on("click", ".isWorkRemoveBtn", function(){
		if($("div").hasClass("isWorkMemberRemoveBtn")) {
			$(this).parent().remove();
			if(!$("div").hasClass("isWorkMemberRemoveBtn")){
				$("#projectWorkMemberSelectListDisp").html("담당자가 없습니다.");
			}
			f_workMemberList();
		}
		if($("div").hasClass("isWorkPntNoRemoveBtn")) {
			$(this).parent().remove();
 			if(!$("div").hasClass("isWorkPntNoRemoveBtn")){
				$("#projectWorkPntNoSelectDisp").html("상위 작업이 없습니다.");
			}
		}
		
	});
	/******************** 작업 추가 끝 ********************/
    
	
	
	
	
	////////////////////////////////////////////////////
	// 칸반보드 올 경우 자동으로 오늘 작업 목록 불러온다.
	f_TodayWorkListView();
    

</script>


























