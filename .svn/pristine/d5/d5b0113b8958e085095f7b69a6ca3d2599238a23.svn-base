<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags"
	prefix="security"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form" %>	



<main class="content" style="padding-top:0px;">

	<div class="container-fluid p-0">
		<div class="row">
			<!-- 왼쪽 메인 컨텐츠 -->
			<div class="col-md-8 col-xl-9">
				<div class="tab-content">
					<!-- 프로젝트 관리 -->
					<div class="tab-pane fade active show" id="tab-1" role="tabpanel">
						<div class="card">
							<div id="proSettingDisp"></div>
						</div>
					</div>
						
					<!-- 멤버 관리 -->
					<div class="tab-pane fade active fade" id="tab-2" role="tabpanel">
						<!-- 프로젝트 참여 멤버 -->
						<div class="card">
							<div class="card-header">
								<h2 class="card-title mb-0">프로젝트 팀원 목록</h2>
							</div>
							<div class="card-body" id="memManagementDisp1"></div>
							<!-- 멤버 초대하기 버튼 -->
							<div class="card-footer d-flex justify-content-between align-items-center">
								<div>
		                        	<input type="checkbox" class="selectAllBtn">
		                        	<label for="selectAll">전체선택</label>
		                        </div>
								<div>
									<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#participateModal">초대하기</button>
									<button type="button" class="btn btn-secondary participateCancelBtn">추방하기</button>
								</div>
							</div>
						</div>
					
						<!-- 초대 요청 보낸 멤버 -->
						<div class="card">
							<div class="card-header">
								<h2 class="card-title mb-0">초대 응답 대기 멤버</h2>
							</div>
							<div class="card-body" id="memManagementDisp0"></div>
							<div class="card-footer d-flex justify-content-between align-items-center">
								<div>
			                        <input type="checkbox" class="selectAllBtn">
			                        <label for="selectAll">전체선택</label>
								</div>
		                        <div>
			                        <button type="button" class="btn btn-secondary participateCancelBtn">초대 취소하기</button>
			                	</div>
		                    </div>
						</div>
						
						<!-- 초대 거절한 멤버 -->
						<div class="card">
							<div class="card-header">
								<h2 class="card-title mb-0">초대 거절 멤버</h2>
							</div>
							<div class="card-body" id="memManagementDisp2"></div>
							<div class="card-footer d-flex justify-content-between align-items-center">
								<div>
		                        	<input type="checkbox" class="selectAllBtn">
			                        <label for="selectAll">전체선택</label>
		                        </div>
		                    
		                        <div>
		                        	<button type="button" class="btn btn-primary" id="participateAgain">다시 초대하기</button>
		                        	<button type="button" class="btn btn-secondary participateCancelBtn">초대 취소하기</button>
		                        </div>
		                    </div>
						</div>
						
					</div>
				</div>
			</div>
			
			<!-- 우측 서브 메뉴 -->
	 		<div class="col-md-3 col-xl-3">
				<div class="card">
					<div class="card-header">
						<h5 class="card-title mb-0">Project Settings</h5>
					</div>
					<div class="list-group list-group-flush" role="tablist">
						<a class="list-group-item list-group-item-action active" id="proSettingBtn" data-proCode="${project.proCode }" data-bs-toggle="list" href="#tab-1" role="tab" aria-selected="true">
							프로젝트 관리
						</a>
						<a class="list-group-item list-group-item-action" id="memManagementBtn" data-proCode="${project.proCode }" data-bs-toggle="list" href="#tab-2" role="tab" aria-selected="false" tabindex="-1">
							멤버 관리
						</a>
						<a class="list-group-item list-group-item-action" data-bs-toggle="list" href="#" role="tab" aria-selected="false" tabindex="-1">
							공지사항 관리
						</a>
						<a class="list-group-item list-group-item-action" data-bs-toggle="list" href="#" role="tab" aria-selected="false" tabindex="-1">
							이슈 관리
						</a>
						<a class="list-group-item list-group-item-action" data-bs-toggle="list" href="#" role="tab" aria-selected="false" tabindex="-1">
							작업 관리
						</a>
					</div>
				</div>
			</div>
			
		</div>
	</div>



	<!-- 모달창 -->
	<div class="modal fade" id="participateModal" tabindex="-1" style="display: none;" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<form id="projectParticipateForm">
					<div class="modal-header">
						<h5 class="modal-title">프로젝트 멤버 초대</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body m-3">
						<div class="mb-3">
							<label class="form-label">회원 Email</label> 
							<input type="text" class="form-control md-3" name="memEmail" value="">
							<input type="hidden" value="${project.proCode }" name="proCode">
						</div>
						<div class="mb-3">
							<label class="form-label">직책</label>
							<select name="proRoleCd" class="form-control">
								<option value="PR003" selected="">팀원</option>
								<option value="PR002">팀장</option>
							</select>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary participateCancelBtn" data-bs-dismiss="modal">Close</button>
						<button id="projectParticipateBtn" type="button" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
					</div>
				</form>
			</div>
		</div>
	</div>


</main>

<footer class="footer"> </footer>

<script type="text/javascript">

	let proSettingBtn = $("#proSettingBtn");
	let memManagementBtn = $("#memManagementBtn");
	let projectUpdateBtn = $("#projectUpdateBtn");
	let participateCancelBtn = $(".participateCancelBtn")
	let selectAllBtn = $(".selectAllBtn"); 
	let participateAgain = $("#participateAgain");
	
	let proSettingDisp = $("#proSettingDisp");
	let memManagementDisp0 = $("#memManagementDisp0");
	let memManagementDisp1 = $("#memManagementDisp1");
	let memManagementDisp2 = $("#memManagementDisp2");

	// 프로젝트 설정 HTML 
	let makeProSettingHtml = function(project){
		let proSettingHtml = "";
		proSettingHtml += `
			<div class="card-header">
			<h5 class="card-title mb-0">프로젝트 정보</h5>
			</div>
			<div class="card-body">
				<div class="row">
						<div class="col-md-4">
						<div class="text-center">
							<img class="card-img-top" src="${pageContext.request.contextPath }/resources/images/pms/800.png" alt="Project">
							<div class="mt-2 d-grid">
								<span class="btn btn-outline-primary"><i class="fas fa-upload"></i>Upload</span>
							</div>
						</div>
					</div>
					<div class="col-md-8">
						<div class="mb-3">
							<label class="form-label">프로젝트 명</label> 
							<input type="text" class="form-control" value="\${project.proTitle }">
						</div>
						<div class="mb-3">
							<label class="form-label">프로젝트 내용</label>
							<textarea rows="2" class="form-control" value="\${project.proDetail }">\${project.proDetail }</textarea> 
						</div>
						<div class="mb-3">
							<label class="form-label">프로젝트 시작 날짜 : \${project.proSdate }</label> 
						</div>
						<div class="mb-3">
							<label class="form-label">프로젝트 종료 날짜 : \${project.proEdate }</label> 
						</div>
						<button type="button" class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#centeredModalPrimary">Update</button>
						
						<div class="modal fade" id="centeredModalPrimary" tabindex="-1" style="display: none;" aria-hidden="true">
							<div class="modal-dialog modal-dialog-centered" role="document">
								<div class="modal-content">
									<form id="projectUpdateForm">
										<div class="modal-header">
											<h5 class="modal-title">프로젝트 정보 수정</h5>
											<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
										</div>
										<div class="modal-body m-3">
											<div class="mb-3">
												<label class="form-label">프로젝트 명</label> 
												<input type="text" class="form-control" name="proTitle" value="\${project.proTitle }">
											</div>
											<div class="mb-3">
												<label class="form-label">프로젝트 내용</label>
												<textarea rows="2" class="form-control" name="proDetail" value="\${project.proDetail }">\${project.proDetail }</textarea> 
											</div>
											<div class="mb-3">
												<label class="form-label">프로젝트 시작 날짜</label> 
												<input class="form-control form-control-lg" name="proSdate" value="\${project.proSdate }" type="date" placeholder="프로젝트 시작 날짜">
											</div>
											<div class="mb-3">
												<label class="form-label">프로젝트 종료 날짜</label> 
												<input class="form-control form-control-lg" name="proEdate" value="\${project.proEdate }" type="date" placeholder="프로젝트 종료 날짜">
											</div>
											<div class="mb-3">
												<input type="hidden" value="\${project.memEmail }" name="memEmail">
												<input type="hidden" value="\${project.proCdate }" name="proCdate">
												<input type="hidden" value="\${project.proEndYn }" name="proEndYn">
												<input type="hidden" value="\${project.proDelYn }" name="proDelYn">
												<input type="hidden" value="\${project.proClsCd }" name="proClsCd">
												<input type="hidden" value="\${project.proCode }" name="proCode">
											</div>
										</div>
										<div class="modal-footer">
											<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
											<button id="projectUpdateBtn" type="button" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			`;
		return proSettingHtml;
	}
 
	
	// 멤버 관리 HTML 
	let makeMemManagementHtml = function(memberList){
		let memManagementHtml = "";
		memManagementHtml += `
		<div class="row">
			<table class="table table-striped table-hover">
				<thead>
					<tr>
						<th style="width: 10%">체크</th>
						<th style="width: 50%">멤버</th>
						<th style="width: 15%">직책</th>
						<th style="width: 15%">가입날짜</th>
						<th style="width: 10%">관리</th>
					</tr>
				</thead>
				<tbody>
		`;
		for(let i=0; i < memberList.length; i++){
			
		let mcodeNm = `\${memberList[i].mcodeNm}`;
		
		console.log("mcodeNm : " + mcodeNm);
		
		memManagementHtml += `
						<tr>
							<td>
								`;
		if(mcodeNm!="관리자"){
			memManagementHtml += `<input name="name" class="form-check-input" type="checkbox" data-mem-Email="\${memberList[i].memEmail}" value="">`;
		}
								
		memManagementHtml += `</td>
							<td><img
								src="${pageContext.request.contextPath }/resources/images/pms/200.png"
								width="48" height="48" class="rounded-circle me-2"
								alt="Avatar">\${memberList[i].memEmail}</td>
							<td>\${memberList[i].mcodeNm}</td>
							<td>\${memberList[i].partDate}</td>
							<td class="table-action">
								<a href="#"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-2 align-middle"><path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path></svg></a>
								<a href="#"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash align-middle"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg></a>
							</td>
						</tr>`; 
		}
		memManagementHtml += `
				</tbody>
			</table>
			
		</div>
		`;
		return memManagementHtml;
	}
	
	// 프로젝트 관리 UI
	function projectManagementUI(){
		$.ajax({
			url : "${pageContext.request.contextPath }/project/project/management/projectSetting/${project.proCode}",
			method : "get",
			dataType : "json",
			success : function(resp) {
				proSettingDisp.empty();
				proSettingDisp.html(makeProSettingHtml(resp));
				projectUpdate();
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}
	
	// 관리 페이지 첫 UI, 프로젝트 관리 UI
	projectManagementUI();

	// 프로젝트 관리 버튼 클릭 시
	proSettingBtn.on('click' , function(){
		proSettingDisp.empty();
		
		let data = this.dataset['procode'];
		let method = this.method;
		console.log(data);
		$.ajax({
			url : "${pageContext.request.contextPath }/project/project/management/projectSetting/"+data,
			method : method,
			dataType : "json",
			success : function(resp) {
				proSettingDisp.empty();
				proSettingDisp.html(makeProSettingHtml(resp));
				projectUpdate();
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		})
	});
	
	
	// 프로젝트 멤버 관리 UI
	function memManagementUI(){
		$.ajax({
			url : "${pageContext.request.contextPath }/project/project/management/memberManagementList/${project.proCode }",
			method : "get",
			dataType : "json",
			success : function(resp) {
  				memManagementDisp0.empty();
  				memManagementDisp1.empty();
  				memManagementDisp2.empty();

 				memManagementDisp0.html(makeMemManagementHtml(resp.standBy));
 				memManagementDisp1.html(makeMemManagementHtml(resp.yes));
 				memManagementDisp2.html(makeMemManagementHtml(resp.no));
				
				/* projectParticipateInsert();  */
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}
	
	
	// 프로젝트 멤버 관리 버튼 클릭 시
	memManagementBtn.on('click' , function(){
		memManagementUI();
	})
	
	// 프로젝트 수정하기 
	function projectUpdate(){ 
		$("#projectUpdateBtn").on("click",function(event){
			
			let data =  $("#projectUpdateForm").serialize();
			
			$.ajax({
				url : "${pageContext.request.contextPath }/project/projectUpdate",
				method : "post",
				data : data,
				success : function(resp) {
					if(resp=="1"){
						projectManagementUI();
					}else{
						console.log("실패");
					}
				},
				error : function(jqXHR, status, error) {
					console.log(jqXHR);
					console.log(status);
					console.log(error);
				}
			});
		})
	};
	
	
	// 프로젝트 초대하기
	$("#projectParticipateBtn").on("click",function(event){
		let data =  $("#projectParticipateForm").serialize();
		console.log(data);
		$.ajax({
			url : "${pageContext.request.contextPath }/project/participateInsert",
			method : "post",
			data : data,
			success : function(resp) {
				if(resp=="1"){
					console.log("성공1")
					memManagementUI();
				}else{
					console.log("실패2");
					memManagementUI();
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	})
	
	
	// 프로젝트 초대 취소, 추방  
	participateCancelBtn.on("click", function(){

		let emailListData = []; 
		let checkfind = $(this).parent().parent().siblings()[1];
		let inputTags = $(checkfind).find("input");
		 for(var i=0; i<inputTags.length; i++){
			if(inputTags[i].checked){
				emailListData.push(inputTags[i].dataset.memEmail);
			}
		} 
		console.log(emailListData);
		console.log("${project.proCode}");
		let dataObject = {
			"proCode" : "${project.proCode}",
			"memEmail" : emailListData
		}
		console.log(typeof(dataObject));
		console.log(typeof(JSON.stringify(dataObject)));

  		$.ajax({
			url : "${pageContext.request.contextPath }/project/participateDelete",
			method : "post",
			data : JSON.stringify(dataObject),
			contentType : "application/json;charset=utf-8",
			success : function(resp) {
				memManagementUI();
				console.log(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});  
	});

	// 다시 초대하기
	participateAgain.on("click", function(){

		let emailListData = []; 
		let checkfind = $(this).parent().parent().siblings()[1];
		let inputTags = $(checkfind).find("input");
		 for(var i=0; i<inputTags.length; i++){
			if(inputTags[i].checked){
				emailListData.push(inputTags[i].dataset.memEmail);
			}
		} 
		console.log(emailListData);
		console.log("${project.proCode}");
		let dataObject = {
			"proCode" : "${project.proCode}",
			"memEmail" : emailListData
		}
		
		console.log(typeof(dataObject));
		console.log(typeof(JSON.stringify(dataObject)));

  		$.ajax({
			url : "${pageContext.request.contextPath }/project/participateAgain",
			method : "post",
			data : JSON.stringify(dataObject),
			contentType : "application/json;charset=utf-8",
			success : function(resp) {
				memManagementUI();
				console.log(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});  
	});
	
	
	// 체크박스 전체 체크하기
	selectAllBtn.on("click", function(){
		let checkfind = $(this).parent().parent().siblings()[1];
		let inputTags = $(checkfind).find("input");
		
		if(inputTags.is(":checked")){
			inputTags.prop("checked", false);
		}else{
			inputTags.prop("checked", true);			
		}
	})

</script>


