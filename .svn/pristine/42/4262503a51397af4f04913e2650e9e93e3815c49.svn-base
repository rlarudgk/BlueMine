<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.project.board.dao.BoardDao">
	
	<!-- board 테이블에 데이터 입력 
	parameter : boardVO 선물꾸러미
	//boardVO : BoardVO(boardNo=null, memEmail=null, 
	proCode=P202302280097, boardTitle=제목, boardCont=<p>내용</p>
//		, boardDate=null, hit=null, boardAttNo=null)
	insert, update, delete구문의 경우 resultType은 생략.(당연히 int(0,1)이므로)
	-->
	<!-- 
	resultType : 조회 결과 값을 저장하기 위한 데이터 타입
	parmeterType : 전달받은 데이터 타입 지정
	 -->
	
	<!-- 게시글 생성 -->
	<insert id="insertBoard" parameterType="BoardVO">
		<!-- 
		selectKey : keyProperty값에 해당하는 데이터를 받아옴과 동시에  service단(아래 insert 쿼리) 메서드 호출부에 반환
		resultType="int" : select 결과는 숫자이므로 int 반환(게시글 번호 자동 증가)(담을 데이터 타입)
		order="BEFORE" : insert 쿼리를 실행 전에 먼저 실행됨
		keyProperty="boardNo" : BoardVO의 멤버변수인 boardNo(여기서는 boardNo)에 그 숫자를 넣어라
		boardNo=null => ex)boardNo=33
		 -->
		<selectKey resultType="int" order="BEFORE" keyProperty="boardNo">
			SELECT BOARD_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		<!-- INSERT INTO 테이블명(칼럼명) VALUES(칼럼에 넣을 값) -->
		INSERT INTO BOARD (
		    BOARD_NO
		    ,MEM_EMAIL
		    ,PRO_CODE
		    ,BOARD_TITLE
		    ,BOARD_CONT
		    ,BOARD_DATE
		    ,HIT
		) VALUES (
		  	  #{boardNo,jdbcType=NUMERIC}
		    , #{memEmail,jdbcType=VARCHAR}
		    , #{proCode,jdbcType=VARCHAR}
		    , #{boardTitle,jdbcType=VARCHAR}
		    , #{boardCont,jdbcType=VARCHAR}
		    , SYSDATE
		    , 0
		)
	</insert>
	
	<!-- 게시글 목록 조회 -->
	<!-- 
	parmeterType : String(proCode값을 가져오므로)
	resultType : BoardVO(목록관 관련된 여러 값을 저장하므로)
	-->
	<select id="selectBoardList" parameterType="String" resultType="BoardVO">
	<!-- SELECT 컬럼명 FROM 테이블명 WHERE 조건 -->
    <!--
    TO_CHAR : 날짜, 숫자 등의 값을 문자열로 변환하는 함수
    'YYYY-MM-DD' : 날짜 포맷 변경
    -->
	 	SELECT 
		    A.BOARD_NO
		    , A.MEM_EMAIL
		    , A.PRO_CODE
		    , A.BOARD_TITLE
		    , A.BOARD_CONT
		    , TO_CHAR(A.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE
		    , A.HIT
		    , A.BOARD_ATT_NO
		    , B.MEM_NAME
		FROM BOARD A
		INNER JOIN MEMBER B ON(A.MEM_EMAIL = B.MEM_EMAIL)
        WHERE PRO_CODE = #{proCode}	
        ORDER BY A.BOARD_NO
	</select>
	
	<!-- 게시글 세부 조회 -->
	<!-- SELECT 컬럼명 FROM 테이블명 WHERE 조건 -->
	<!-- 
	parmeterType : int(전달받는 값이 boardNo이므로)
	resultType : BoardVO(목록관 관련된 여러 값을 저장하므로)
	-->
	<select id="selectBoard" parameterType="int" resultType="BoardVO">
		SELECT 
		    A.BOARD_NO
		    , A.MEM_EMAIL
		    , A.PRO_CODE
		    , A.BOARD_TITLE
		    , A.BOARD_CONT
		    , TO_CHAR(A.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE
		    , A.HIT
		    , A.BOARD_ATT_NO,
		    B.MEM_NAME
		FROM BOARD A
		INNER JOIN MEMBER B ON(A.MEM_EMAIL = B.MEM_EMAIL)
		WHERE BOARD_NO = #{boardNo,jdbcType=NUMERIC}
	</select>
	
	<!-- 게시판 검색 목록 조회 -->
	<!-- SELECT 컬럼명 FROM 테이블명 WHERE 조건 -->
	<!-- 
	parmeterType : hashMap(다중 파라미터,여러개검색?)
	resultType : BoardVO(목록관 관련된 여러 값을 저장하므로)
	-->
	<select id="selectBoardSearchList" resultType="BoardVO" parameterType="hashMap">
		SELECT
			A.*
		FROM(
			SELECT
				ROWNUM RNUM,
				A.MEM_NAME,
				A.MEM_EMAIL,
				B.BOARD_NO,
				B.BOARD_TITLE,
				B.BOARD_CONT,
				TO_CHAR(B.BOARD_DATE,'YYYY-MM-DD') AS BOARD_DATE,
				B.HIT
		FROM MEMBER A , BOARD B
		WHERE A.MEM_EMAIL = B.MEM_EMAIL
		AND B.PRO_CODE = #{proCode}
		<if test="searchOption!=null">
			<choose>
				<when test="searchOption=='boardTitle'">
					AND B.BOARD_TITLE LIKE '%' || #{searchWord} || '%'
				</when>
				<when test="searchOption=='boardCont'">
					AND B.BOARD_CONT LIKE '%' || #{searchWord} || '%'
				</when>
				<otherwise>
					AND B.BOARD_TITLE LIKE '%' || #{searchWord} || '%'
					AND B.BOARD_CONT LIKE '%' || #{searchWord} || '%'
				</otherwise>
			</choose>
		</if>
		    ORDER BY B.BOARD_NO 
		)A
	</select>
	
	<!-- 게시글 수정 -->	
	<!-- update는 result값 생략 : 값은 당연히 int(성공1, 실패0)이므로 -->
	<!-- parmeterType : BoardVO(boardVO에 담긴 값 가져오므로) -->
	<!-- UPDATE 테이블명 SET 컬럼명=변경할내용 WHERE 조건 -->
	<update id="updateBoard" parameterType="BoardVO">
		UPDATE BOARD
		SET 
		    BOARD_TITLE = #{boardTitle,jdbcType=VARCHAR}
		    ,BOARD_CONT = #{boardCont,jdbcType=VARCHAR}
		    ,BOARD_DATE = SYSDATE
		WHERE
			BOARD_NO = #{boardNo,jdbcType=NUMERIC}
	</update>
	
	<!-- 게시글 삭제 -->	
	<!-- delete는 result값 생략 : 값은 당연히 int(성공1, 실패0)이므로 -->
	<!-- parmeterType : int(전달받는 값이 boardNo이므로) -->
	<delete id="deleteBoard" parameterType="int">
		DELETE
		FROM BOARD
		WHERE BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 게시글 조회수 증가 -->
	<!-- update는 result값 생략 : 값은 당연히 int(성공1, 실패0)이므로 -->
	<!-- parmeterType : int(전달받는 값이 boardNo이므로) -->
	<!-- UPDATE 테이블명 SET 컬럼명=변경할내용 WHERE 조건 -->
	<update id="incrementHit" parameterType="int">
		UPDATE BOARD
		SET
			HIT = HIT + 1
		WHERE
			BOARD_NO = #{boardNo,jdbcType=NUMERIC}
	</update>
	
	<!-- 게시판 댓글 -->
	
		<!-- 게시글 댓글 목록 조회 -->
	<!-- resultType="BoardCommVO" : BoardCommVO 형태로 반환하므로 -->
	<!-- parmeterType : int(전달받는 값이 boardNo이므로) -->
	<select id="selectBoardCommList" parameterType="int" resultType="BoardCommVO">
	 	SELECT 
		      MEM_EMAIL
		    , MEM_NAME 
		    , BOARD_COMM_CONT
		    , TO_CHAR(BOARD_COMM_DATE, 'YYYY-MM-DD') AS BOARD_COMM_DATE
		FROM BOARD_COMM
        WHERE BOARD_NO = #{BoardNo}	
        ORDER BY BOARD_COMM_DATE
	</select>
	
	<!-- 게시판 댓글 생성 -->
	<insert id="insertBoardComm" parameterType="BoardCommVO">
	<selectKey resultType="int" order="BEFORE" keyProperty="boardCommNo">
		SELECT BOARD_COMM_SEQ.NEXTVAL
		FROM DUAL
	</selectKey>
		
		INSERT INTO BOARD_COMM (
		     BOARD_COMM_NO
		    ,BOARD_NO
		    ,MEM_EMAIL
		    ,BOARD_COMM_PNT_NO
		    ,BOARD_COMM_CONT
		    ,BOARD_COMM_DATE
		) VALUES (
			#{boardCommNo}
		  	, #{boardNo,jdbcType=NUMERIC}
		    , #{memEmail,jdbcType=VARCHAR}
		    , #{boardCommPntNo,jdbcType=VARCHAR}
		    , #{boardCommCont,jdbcType=VARCHAR}
		    , SYSDATE
		)
 	</insert> 
	
	<!-- insert는 result값 생략 : 값은 당연히 int(성공1, 실패0)이므로 -->
<!-- 	<insert id="insertBoardComm" parameterType="BoardCommVO"> -->
<!-- 		<selectKey resultType="int" order="BEFORE" keyProperty="boardCommNo"> -->
<!-- 			SELECT BOARD_COMM_SEQ.NEXTVAL -->
<!-- 			FROM DUAL -->
<!-- 		</selectKey> -->
		
<!-- 		INSERT INTO BOARD_COMM ( -->
<!-- 		     BOARD_COMM_NO -->
<!-- 		    ,BOARD_NO -->
<!-- 		    ,MEM_EMAIL -->
<!-- 		    ,BOARD_COMM_PNT_NO -->
<!-- 		    ,BOARD_COMM_CONT -->
<!-- 		    ,BOARD_COMM_DATE -->
<!-- 		    ,MEM_NAME -->
<!-- 		) VALUES ( -->
<!-- 			#{boardCommNo} -->
<!-- 		  	, #{boardNo,jdbcType=NUMERIC} -->
<!-- 		    , #{memEmail,jdbcType=VARCHAR} -->
<!-- 		    , #{boardCommPntNo,jdbcType=VARCHAR} -->
<!-- 		    , #{boardCommCont,jdbcType=VARCHAR} -->
<!-- 		    , SYSDATE -->
<!-- 		    , #{memName,jdbcType=VARCHAR} -->
<!-- 		) -->
<!-- 	</insert> -->
	
		<!-- 게시판 댓글 수정 -->
		<!-- update는 result값 생략 : 값은 당연히 int(성공1, 실패0)이므로 -->
	<update id="updateBoardComm" parameterType="BoardCommVO">
		UPDATE BOARD_COMM
		SET 
		     BOARD_COMM_CONT = #{boardCommCont,jdbcType=VARCHAR}
		    ,BOARD_COMM_DATE = SYSDATE
		WHERE
			BOARD_COMM_NO = #{boardCommNo,jdbcType=NUMERIC}
	</update>
	
	<!-- 게시판 댓글 삭제 -->	
	<!-- delete는 result값 생략 : 값은 당연히 int(성공1, 실패0)이므로 -->
	<delete id="deleteBoardComm" parameterType="int">
		DELETE
		FROM BOARD_COMM
		WHERE BOARD_COMM_NO = #{boardCommNo}
	</delete>
	
</mapper>