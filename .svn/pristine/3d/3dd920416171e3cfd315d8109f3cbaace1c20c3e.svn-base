package kr.or.ddit.project.work.service;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.project.work.vo.WorkChargerVO;
import kr.or.ddit.project.work.vo.WorkCommVO;
import kr.or.ddit.project.work.vo.WorkVO;

public interface WorkService {

	/**
	 * 프로젝트 작업 리스트 조회하기
	 * @param proCode
	 * @return List<WorkVO>
	 */	
	public List<WorkVO> retrieveWorkList(@Param("proCode") String proCode);
	
	/**
	 * 프로젝트 오늘 작업 리스트 조회하기
	 * @param proCode
	 * @return List<WorkVO>
	 */	
	public List<WorkVO> retrieveTodayWorkList(@Param("proCode") String proCode);
	
	/**
	 * 프로젝트 나에게 배정된 작업 리스트 조회하기
	 * @param WorkVO
	 * @return List<WorkVO>
	 */	
	public List<WorkVO> retrieveMyWorkList(WorkVO work);
	
	/**
	 * 프로젝트 작업 하나 조회
	 * @param WorkVO
	 * @return WorkVO
	 */	
	public WorkVO retrieveWorkDetail(WorkVO work);
	
	/**
	 * 현재 작업에 하위 작업 목록 조회
	 * @param WorkVO
	 * @return WorkVO
	 */	
	public List<List<WorkVO>> retrieveDownWorkList(List<WorkVO> workList);
	
	/**
	 * 작업 등록하기
	 * @param WorkVO
	 * @return 성공(OK), 실패(FAIL)
	 */	
	public ServiceResult createWork(WorkVO work);
	
	/**
	 * 작업 담당자 배정하기
	 * @param WorkVO
	 * @return 성공(OK), 실패(FAIL)
	 */
	public ServiceResult createWorkCharger(WorkVO work);
	
	/**
	 * 작업, 담당자 동시에 수정하기
	 * @param WorkVO
	 * @return 성공(OK), 실패(FAIL)
	 */
	public int modifyWorkAndWorkCharger(WorkVO work);
	
	/**
	 * 작업 상태 코드 수정하기
	 * @param WorkVO
	 * @return 성공(OK), 실패(FAIL)
	 */
	public int modifyWorkStateCd(WorkVO work);
	
	/**
	 * 작업 담당자 삭제하기
	 * @param WorkVO
	 * @return 
	 */
	public ServiceResult deleteWorkCharger(List<WorkVO> workList);
	
	/**
	 * 작업 하나 삭제하기
	 * @param WorkVO
	 * @return 
	 */
	public ServiceResult deleteWork(List<WorkVO> workList);
	
	/**
	 * 작업 댓글 추가하기
	 * @param WorkVO
	 * @return 
	 */
	public ServiceResult createWorkComm(WorkCommVO workComm);
	
	/**
	 * 작업 댓글 목록 가져오기
	 * @param WorkCommVO
	 * @return List<WorkCommVO>
	 */
	public List<WorkCommVO> retrieveWorkCommList(WorkCommVO workComm);
}
