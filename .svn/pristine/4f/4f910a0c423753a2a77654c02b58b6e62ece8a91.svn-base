 <%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<main class="content">
	<div class="container-fluid p-0">

		<a class="btn btn-primary float-end mt-n1 modalPop" id="issCreate">
		<button type="button" class="btn workList" data-bs-toggle="modal" data-bs-target="#centeredModalPrimary" style="padding: 0px; color: currentcolor;">
			New issue
		</button>
		</a>
		
		<div class="mb-3">
			<h1 class="h3 d-inline align-middle">ISSUE</h1>
		</div>
		
		<div class="row list">
		</div>
		
		<!-- BEGIN primary modal -->
			<div class="modal fade" id="centeredModalPrimary" tabindex="-1" role="dialog" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered modal-lg isCont" role="document">	
							
					<div class="modal-content">
						<div class="modal-body m-3">
							<div class="card-title mb-0 float-end" id="memName"></div>
							<div class="card-title mb-0 float-end padding5">작성자</div>
							<div class="card-title mb-0" style="display: flex;">
								<div id="workNo" style="align-self:center;padding-right:10px;" class="workNo"></div>
								<div id="issLabelCd"></div>
								<div id="issEmerCd"></div>
							</div>
							
							<div class="d-flex align-items-start" style="margin-top: 20px;">
								<div class="flex-grow-1">
									<table class="table table-bordered">
										<tr>
											<td colspan="2" style="height:400px">
												<div class="card-header">
													<div class="float-start card-title inline" id="issTitle"></div>
													<div class="float-end" id="issStatusCd" style="direction: rtl"></div><br>
													<div class="float-end" id="issRdate"></div>
													<div class="card-title float-end padding5">등록일</div>
												</div>
												<div class="card-body">
													<div id="issCont" style="height: 350px;padding-top: 100px;"></div>
													<div>
														<div class="card-title inline">
															@첨부파일
														</div>
														<div class="float-end" id="chargerMem" style="display: flex;">
														</div>
													</div>
												</div>
											</td>
										</tr>
										<tr>
											<td style="width:50%">
														<div id="hidden"></div>
														<span class="mb-2 font-weight-bold" id="issSdate"></span>
														<span class="float-end" id="issEedate"></span>
														<div class="progress progress-sm" id="progress">
															<div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100">
															</div>
														</div>
											</td>
											<td>
												<div class="card-title mb-0">답변하기</div>
											</td>
										</tr>
									</table>
									<div>
										댓글
									</div>
								</div>
							</div>
			
							<hr>
							<button type="button" id="hideModal" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
							<button type=submit class="btn btn-primary issUpdate">수정</button>
						</div>
						
					</div>
				</div>	
			</div>
		<!-- END primary modal -->
	
	</div>
</main>
<script>

	let $issLabelCd = $("#issLabelCd");

	// 모달 띄우기
	$(document).on("click", ".modalPop", function(){
		let modalPop = $(this).attr("id");
		let issNo = $(this).children("input").text()
		
		if(modalPop=="issCreate"){
			// 이슈 생성 페이지
			$.ajax({
				url : '${pageContext.request.contextPath}/project/issueForm',
				type : 'GET',
				success : function(resp) {
					$('.isCont').html(resp);
				},
				error : function(xhr, error, msg) {
					console.log(xhr, error, msg);
				},
				dataType : 'html'
			}) 
		}else if(modalPop=="issDetail"){
			console.log("이슈 디테일 들어옴");
			// 이슈 상세 페이지
			$.ajax({
				url : '${pageContext.request.contextPath}/project/issueDetail/'+issNo,
				type : 'POST',
	            dataType : 'json',
	            beforeSend : function(xhr) {   // 데이터 전송 전  헤더에 csrf값 설정
	                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
	            },
				success : function(resp) {
					 console.log("issue : ", resp.issue);
					 
					 
					 $workNo.text(resp.issue.work.workTitle);
					 $issLabelCd.text(LabelText(resp.issue.issLabelCd)).addClass(LabelTag(resp.issue.issLabelCd));
					 $issTitle.text(resp.issue.issTitle);
					 $issStatusCd.text(StateText(resp.issue.issStatusCd));
					 $issRdate.text((resp.issue.issRdate).substring(0, 10));
					 $issRdate.text((resp.issue.issRdate).substring(0, 10));
					 $issCont.text(resp.issue.issCont);
					 $memName.text(resp.issue.member.memName);
					 $issSdate.text((resp.issue.issSdate).substring(0, 10));
					 $issEedate.text((resp.issue.issEedate).substring(0, 10));
					 $issEmerCd.html(EmerCdTag(resp.issue.issEmerCd));
					 
					 // 담당자들 생성
					 let selectTag = [];
				     selectTag.push($("<div>").attr('class', 'card-title padding5').html("담당자"));
					 $.each(resp.member,function(i,v){
						  selectTag.push($("<div>").attr('class', 'padding5').html(v.MEM_NAME));
					 });
					 $chargerMem.html(selectTag);
					 
					 // 퍼센트 게이지 css추가
					 $(".progress-bar").css('width', Progress(resp.issue.issSdate, resp.issue.issEedate))
					 
					 
					// 수정 페이지
					$(".issUpdate").on("click", function(event){
							let issNo = resp.issue.issNo
							
							// 먼저 만들어 넣고
							$issLabelCd.before($('<select id="issLabelCd" name="issLabelCd" class="'+LabelTag(resp.issue.issLabelCd)+'">'
 									 +'<option value="IL001">Question</option>'
 									 +'<option value="IL002">Bug</option>'
 									 +'<option value="IL003">Help</option>'
 									 +'<option value="IL004">Notice</option>'
 									 +'</select>'));
							 $issLabelCd.remove(); // 지우고
							 
							 $workNo.contents().unwrap().wrap('<select id="workNo" name="workNo" class="workNo"></select>');
							 $chargerMem.before('<select class="float-end" id="chargerMem" name="chargerMem"></select>');
							 $chargerMem.remove();
							 
// 							 $(resp.issue.issLabelCd).attr('selected','selected');
							 $issEmerCd.contents().unwrap().wrap(resp.issue.issEmerCd);
							 $memName.text(resp.issue.member.memName);
							 $issTitle.contents().unwrap().wrap( '<input class="float-start card-title inline form-control" style="width: 50%;" value="'+resp.issue.issTitle+'"></input>' );
							 $issStatusCd.contents().unwrap().wrap( '<input class="float-end" value="'+StateText(resp.issue.issStatusCd)+'"></input>' );
							 $issCont.html(resp.issue.issCont);
							
							 $issSdate.contents().unwrap().wrap( '<input type="date"  name="issSdate" id="issSdate" class="form-control dateForm" value="'+resp.issue.issSdate+'"></input>' );
							 $issEedate.contents().unwrap().wrap( '<input type="date"  name="issSdate" id="issSdate" class="form-control dateForm float-end" value="'+resp.issue.issEedate+'"></input>' );
							 $progress.contents().unwrap();
							 $hidden.text("\u00A0시작일 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0  종료일");
							 
// 						 	$(document).ready(memFnc());
						 	
						 	
// 						 	resp.issue.work.workNo
						 	
							 // 담당자들 생성
// 							 let selectTag = [];
// 						     selectTag.push($("<div>").attr('class', 'card-title').css('padding', '5px').html("담당자"));
// 							 $.each(resp.member,function(i,v){
// 								  selectTag.push($("<div>").css('padding', '5px').html(v.MEM_NAME));
// 							 });
							 
// 							 // 퍼센트 게이지 css추가
// 							 $(".progress-bar").css('width', Progress(resp.issue.issSdate, resp.issue.issEedate))
							alert("왔다2");
					});
				},
				error : function(jqXHR, status, error) {
					console.log("jqXHR : " + jqXHR);
					console.log("status : " + status);
					console.log("error : " + error);
	             }
	        })
		}
	});
	
	// issue List 값  호출
	$(document).ready(function(){
		 $.ajax({
             url: '${pageContext.request.contextPath}/project/project/issue/'+proCode,
             method: 'GET',
             dataType : 'json',
             success: function (resp) {
            	 
// 				 console.log("resp.issueList : ", resp.issueList);
// 				 // ui 생성 함수 호출
				 let selectTag = [];
				 $.each(resp.issueList,function(i,v){
				 	selectTag.push(ListTag(i,v));
				 });
				 $(".list").html(selectTag);
             },
				error : function(jqXHR, status, error) {
					console.log(jqXHR);
					console.log(status);
					console.log(error);	
             }	
         })
	});
	
	// 수정페이지 라벨 색상 변경
	$(document).on("change", "#issLabelCd", function(event){
		let color = $(this).find("option:selected").val();
		console.log("event", event);
    	console.log(LabelTag(color));
   		$("#issLabelCd").attr('class',LabelTag(color));
    });
	
	/* 년 / 월 / 일을 쪼갬 */
	let dateCal = function(date){
		var result = date.substring(0, 4)+date.substring(5, 7)+date.substring(8, 10);
		return result;
	}
	
	// 날짜 퍼센트 계산
	let Progress = function(start, end){
// 		console.log("start : ", start);
// 		console.log("end : ", end);
		
		let start_date= dateCal(start);
		let end_date = dateCal(end);
		
		var date = new Date();
		var today = date.getFullYear() +
		'' + ( (date.getMonth()+1) < 9 ? "0" + (date.getMonth()+1) : (date.getMonth()+1) )+
		'' + ( (date.getDate()) < 9 ? "0" + (date.getDate()) : (date.getDate()) );
		
// 		console.log("start_date : ", start_date);
// 		console.log("end_date : ", end_date);
// 		console.log("today : ", today);

		var total = end_date-start_date;//전체 기간
		var day = end_date-today;//남은 기간

		var perc ="";
		if(total<0 || start_date>today){
			perc = 0;
		}else if(day>0 || total>0){
			perc = 1 - day/total;			
		}else if(day<=0 || today>end_date){
			perc = 100;
		}
		var result = Math.floor(perc);
// 		console.log("result : ", result);
		
		return result+"%";
	}
	
	// CK EDITOR
	CKEDITOR.replace( 'issCont' );
	
	// 작업 목록 띄우기
	$(".issUpdate, .workList").click(function(){
		$.ajax({ 
			url : "${pageContext.request.contextPath }/project/issueForm",
			type : "get",
			dataType : "json",
			success : function(resp) {
// 				console.log("resp : ", resp);
				
				let selectTag = [];
				$.each(resp, function(i,v){
					selectTag.push($("<option>").attr("value", v.workNo).html(v.workTitle));
				});
				$("#workNo").html(selectTag);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	let optionMemTag = function(i, v){
		return $("<option>").attr("value", v.memEmail).html(v.memName);
	}
		
	// 이슈 담당자 회원 목록 띄우기
	let memFnc = function(){
		var workData = $("#chargerMem").val();
		console.log(workData);
		$.ajax({ 
			url : "${pageContext.request.contextPath }/project/issueMemList",
			type : "get",
			data : {workNo:workData},
			dataType : "json",
			success : function(resp) {
				console.log("작업 : ", resp);
				
				let selectTag = [];
				$.each(resp.memList, function(i,v){
					selectTag.push(optionMemTag(i, v));
				});
				$("#chargerMem").html(selectTag);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}
		
	// 멤버 선택시 이름 div생성 
	$("#memName").on("click", function(event){
//			let value = $(this).val();
		let name = $(this).find("option:checked").text();
//			let opName = $(this).data("opName")

		while(name){
			var names = $("<div>").html(name)
			$("#issNames").html(names).css('padding-top','12px');
			break;
//				let operator = {mail:value,name:name}
//				opName.push(operator)
//				console.log(opName);
		}
	})
//		.data("opName",[]);
	
	// SUBMIT EVENT
	let issueForm = $("#issueForm").on("submit",function(event){
		event.preventDefault();
		
		// 날짜 계산 후 상태 넣기
		let issSdate = $("[name=issSdate]").val();
		let today = new Date();
		
		let Stoday = today.getFullYear() +
				'-' + ( (today.getMonth()+1) < 9 ? "0" + (today.getMonth()+1) : (today.getMonth()+1) )+
				'-' + ( (today.getDate()) < 9 ? "0" + (today.getDate()) : (today.getDate()) );
		let status = "";
		  if(issSdate > today){
			  status = "IS002";
		  }else{
		    status = "IS003";
		  }
		$("[name=issStatusCd]").val(status);
		
		  
		// INSERT 작업
		let data = issueForm.serialize();
		console.log("data : ", data);
		
		$.ajax({
			url : "${pageContext.request.contextPath }/project/issueForm",
			type : "post",
			data : data,
			dataType : "json",
			success : function(resp) {
				console.log("resp : ", resp);
				console.log("message", resp.message);
				// 모달 숨기기
				$("#hideModal").trigger("click");
				
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		$(".isCont").val('');
		return false;
	});
	
	// 긴급도 생성
	let EmerCdTag = function(code){
// 		console.log("code : ",code);
		if(code == "IE001"){
			return $('<div>').attr({'class':'btn btn-github', 'style':'margin-left: 5px'}).html('긴급');
		}else{
			return "&nbsp;";
		}
	}
	
	// 상태 텍스트 설정
	let StateText= function(label){
		let text="";
		
		if(label == "IS001"){
			text = "종료";
		}else if(label == "IS002"){
			text = "진행중 ";
		}else {
			text = "시작 예정";
		}
		return text;
	}
	
	// 라벨 텍스트 설정
	let LabelText= function(label){
		let text="";
		
		if(label == "IL001"){
			text = "QUESTION";
		}else if(label == "IL002"){
			text = "BUG";
		}else if(label == "IL003"){
			text = "HELP";
		}else if(label == "IL004"){
			text = "NOTICE";
		}
		return text;
	}
	
	// 라벨 색 지정
	let LabelTag = function(label){
// 		console.log("label : ",label);
		let color="";
		
		if(label == "IL001"){
			color = "btn btn-success";
		}else if(label == "IL002"){
			color = "btn btn-danger";
		}else if(label == "IL003"){
			color = "btn btn-warning";
		}else {
			color = "btn btn-primary";
		}
		return color;
	}
	
	let $hidden = $("#hidden");

	//project code
	let proCode = '${project.proCode}'
	// issue detail 값 선택
	let $progress = $("#progress");
	let $workNo = $("#workNo");
	let $issEmerCd = $("#issEmerCd");
	let $issTitle = $("#issTitle");
	let $issStatusCd = $("#issStatusCd");
	let $issRdate = $("#issRdate");
	let $issCont = $("#issCont");
	let $memName = $("#memName");
	let $issSdate = $("#issSdate");
	let $issEedate = $("#issEedate");
	let $chargerMem = $("#chargerMem");
	
	// issue list ui 생성 함수
	let ListTag = function(i,v){
		// console.log("v : ",v);
		return $("<div>").attr('class', 'col-12 col-md-6 col-lg-3')
				.append($("<div>").attr('class','card')
				.append($("<button>").attr({
										  'type' : 'button'
										, 'class' : 'btn modalPop'
										, 'data-bs-toggle' : 'modal'
										, 'data-bs-target' : '#centeredModalPrimary'
										, 'id':'issDetail'
				}).css('text-align', 'start')
				.append(
					$("<input>").attr({
						"type" : "hidden",
					}).html(v.issNo),
					$("<div>").attr('class', 'card-header px-4 pt-4')
					.append(
						  $("<div>").attr('class', 'card-actions float-end').html(StateText(v.issStatusCd))
						, $("<h5>").attr('class', 'card-title mb-0').html(v.issTitle)
						, $("<div>").attr('class', LabelTag(v.issLabelCd)).html(LabelText(v.issLabelCd))
						, EmerCdTag(v.issEmerCd)
						  )
					, $("<div>").attr('class', 'card-body px-4 pt-2')
						.append(
							  $("<p>").html(v.issCont)
							, $("<h5>").attr('class', 'rounded-circle me-1').html(v.memName))
					, $("<ul>").attr('class', 'list-group list-group-flush')
						.append($("<li>").attr('class', 'list-group-item px-4 pb-4')
							.append($("<p>").attr('class', 'mb-2 font-weight-bold').html("마감 기한")
										.append($("<span>").attr('class', 'float-end').html(Progress(v.issSdate, v.issEedate)))
										, $("<div>").attr('class', 'progress progress-sm')
											.append($("<div>").attr({
																	'class':'progress-bar'
																	, 'role':'progressbar'
																	, 'aria-valuenow':'100'
																	, 'aria-valuemin':'0'								
																	, 'aria-valuemax':'100'
																	})
																	.css('width', Progress(v.issSdate, v.issEedate))
								)
							)
						)
					)
				)
			)
		}
</script>






