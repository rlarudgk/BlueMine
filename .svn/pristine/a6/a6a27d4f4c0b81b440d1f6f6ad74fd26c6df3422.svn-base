<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags"
	prefix="security"%>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>  

      
<script src="${pageContext.request.contextPath }/resources/ckeditor/ckeditor.js"></script>
<security:authentication property="principal.realMember" var="authMember"/>


<main class="content" style="padding-top:0px;">

	<div class="container-fluid p-0">
		<div class="row">
			<!-- 왼쪽 메인 컨텐츠 -->
			<div class="col-md-8 col-xl-9">
				<div class="tab-content">
					<!-- 작업 Form -->
					<div class="tab-pane fade" id="tab-1" role="tabpanel">
						<div class="card">
							<div class="card-header">
								<h2 class="card-title mb-0">작업 등록하기</h2>
							</div>
							<div class="card-body">
								<form class="projectWorkAddForm">
									<input type="hidden" name="proCode" value="${project.proCode }">
									<table class="table table-bordered">
										<tr>
											<th rowspan="2">
												상위 작업
											</th>
											<td>
												<!-- <input type="text" name="workPntNo" Class="form-control"  /> -->
												<button id="projectWorkPntNoSelectBtn" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#projectWorkPntNoModal">상위작업 선택</button>
											</td>
										</tr>	
										<tr>
											<td>
												<div id="projectWorkPntNoSelectDisp" class="d-flex justify-content-start align-items-center p-2">상위작업이 없습니다.</div>
											</td>
										<tr>
										<tr>
											<th>
												작업 제목
											</th>
											<td>
												<input type="text" name="workTitle" Class="form-control"  />
											</td>
										</tr>	
										<tr>
											<th>
												작업 작성자
											</th>
											<td>
												<span style="padding:8px;">${authMember.memEmail }</span><input type="hidden" name="memEmail" Class="form-control" value="${authMember.memEmail }" />
											</td>
										</tr>	
										<tr>
											<th rowspan="2">
												담당자 선택
											</th>
											<td>
												<button id="projectWorkMemberSelectBtn" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#projectWorkMemberAddModal">담당자 선택</button>
											</td>
										
										</tr>	
										<tr>
											<td>
												<div id="projectWorkMemberSelectListDisp" class="d-flex justify-content-start align-items-center p-2">담당자가 없습니다.</div>
											</td>
										<tr>
											<th>작업 시작 날짜</th>
											<td>
												<input type="date" name="workSdate" class="form-control"/>
											</td>
										</tr>
										<tr>
											<th>작업 상태</th>
											<td>
												<select name="workStateCd" class="form-control">
													<option value="WS001" selected>시작전</option>
													<option value="WS002">진행중</option>
													<option value="WS003">이슈발생</option>
													<option value="WS004">보류</option>
													<option value="WS005">종료</option>
												</select>
											</td>
										</tr>
										<tr>
											<th>작업 우선순위</th>
											<td>
												<select name="workOrderCd" class="form-control">
													<option value="WO001" selected>낮음</option>
													<option value="WS002">보통</option>
													<option value="WS003">높음</option>
												</select>
											</td>
										</tr>
										<tr>
											<th>작업 종료 날짜</th>
											<td>
												<input type="date" name="workEdate" class="form-control"/>
											</td>
										</tr>
										<tr>
											<th>작업 내용</th>
											<td>
											    <textarea name="workDetail" rows="10" cols="80"></textarea>
											</td>
										</tr>
									</table>
									<div class="d-flex justify-content-end">
										<a id="projectWorkAddBtn" class="btn btn-primary">작업 등록</a>
									</div>
								</form>
							</div>
							<div class="card-footer">
							</div>
						</div>
					</div>
						
					<!-- 프로젝트 전체 작업 목록 -->
					<div class="tab-pane fade active show" id="tab-2" role="tabpanel">
						<div class="card">
							<div class="card-header">
								<h2 class="card-title mb-0">프로젝트 작업 목록</h2>
							</div>
							<div class="card-body">
								<!-- <table class="table table-striped table-hover"> -->
								<table class="table table-bordered table-hover">
									<thead class="table-primary">
										<tr style="border-color:none;">
											<th style="width: 5%;"></th>
											<th style="width: 6%;">No</th>
											<th style="width: 25%;">작업 이름</th>
											<th style="width: 24%;">담당자</th>
											<th style="width: 10%;">시작날짜</th>
											<th style="width: 10%;">종료날짜</th>
											<th style="width: 10%;">우선순위</th>
											<th style="width: 10%;">진행률</th>
										</tr>
									</thead>
									<tbody id="proWorkListDsip"></tbody>
								</table>
							</div>
							<div class="card-footer d-flex justify-content-end align-items-center">
								<div>
									<button type="button" class="btn btn-secondary projectWorkDeleteBtn">삭제하기</button>
								</div>
							</div>
						</div>
					</div>
					
					<!-- 프로젝트 나에게 담당된 작업 목록 -->
					<div class="tab-pane fade" id="tab-3" role="tabpanel">
						<div class="card">
							<div class="card-header">
								<h2 class="card-title mb-0">나에게 담당된 작업 목록</h2>
							</div>
							<div class="card-body">
								<table class="table table-bordered table-hover">
									<thead class="table-primary">
										<tr style="border-color:none;">
											<th style="width: 5%;"></th>
											<th style="width: 5%;">No</th>
											<th style="width: 25%;">작업 이름</th>
											<th style="width: 25%;">담당자</th>
											<th style="width: 10%;">시작날짜</th>
											<th style="width: 10%;">종료날짜</th>
											<th style="width: 10%;">우선순위</th>
											<th style="width: 10%;">진행률</th>
										</tr>
									</thead>
									<tbody id="proMyWorkListDsip"></tbody>
								</table>
							</div>
							<div class="card-footer d-flex justify-content-end align-items-center">
								<div>
									<button type="button" class="btn btn-secondary projectWorkDeleteBtn">삭제하기</button>
								</div>
							</div>
						</div>
					</div>
					
				</div>
			</div>
			
			<!-- 우측 서브 메뉴 -->
	 		<div class="col-md-3 col-xl-3">
				<div class="card">
					<div class="card-header">
						<h5 class="card-title mb-0">Project Settings</h5>
					</div>
					<div class="list-group list-group-flush" role="tablist">
						<a class="list-group-item list-group-item-action" id="proWorkFormBtn1" data-proCode="${project.proCode }" data-bs-toggle="list" href="#tab-1" role="tab" aria-selected="false"  tabindex="-1">
							작업 추가
						</a>
						<a class="list-group-item list-group-item-action active" id="proWorkListBtn" data-proCode="${project.proCode }" data-bs-toggle="list" href="#tab-2" role="tab" aria-selected="true">
							전체 작업 목록
						</a>
						<a class="list-group-item list-group-item-action" id="proMyWorkListBtn" data-bs-toggle="list" href="#tab-3" role="tab" aria-selected="false" tabindex="-1">
							나에게 담당된 작업 목록
						</a>
						<a class="list-group-item list-group-item-action" data-bs-toggle="list" href="#" role="tab" aria-selected="false" tabindex="-1">
							..
						</a>
						<a class="list-group-item list-group-item-action" data-bs-toggle="list" href="#" role="tab" aria-selected="false" tabindex="-1">
							..
						</a>
					</div>
				</div>
			</div>
			
		</div>
	</div>

	<!-- 작업 Detail 모달창 -->
	<div class="modal fade" id="projectWorkDetailModal" tabindex="-1" style="display: none;" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered modal-xl" role="document">
			<div class="modal-content" id="projectWorkSelectDetailDisp"></div>
		</div>
	</div>
	
	<!-- 상위 작업 선택 모달창 -->
	<div class="modal fade" id="projectWorkPntNoModal" tabindex="-1" style="display: none;" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
			<div class="modal-content">
				<form id="projectWorkPntNoForm">
					<div class="modal-header">
						<h5 class="modal-title">작업 배정 멤버 선택</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<table class="table">
							<thead>
								<tr>
									<th style="width: 10%">체크</th>
									<th>작업 번호</th>
									<th>작업 제목</th>
								</tr>
							</thead>
							<tbody id="projectWorkPntNoDisp"></tbody>
						</table>
					</div>
					<div class="modal-footer d-flex justify-content-end align-items-center">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
						<button id="projectWorkPntNoAddBtn" type="button" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	
	<!-- 멤버 회원 등록 모달창 -->
	<div class="modal fade" id="projectWorkMemberAddModal" tabindex="-1" style="display: none;" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
			<div class="modal-content">
				<form class="projectWorkAddForm">
					<div class="modal-header">
						<h5 class="modal-title">작업 배정 멤버 선택</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<table class="table">
							<thead>
								<tr>
									<th style="width: 10%">체크</th>
									<th>이메일</th>
									<th>직책</th>
									<th>상태</th>
								</tr>
							</thead>
							<tbody id="projectMemberListDisp"></tbody>
						</table>
					</div>
					<div class="modal-footer d-flex justify-content-end align-items-center">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
						<button id="projectWorkMemberAddBtn" type="button" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
					</div>
				</form>
			</div>
		</div>
	</div>

</main>





<footer class="footer"> </footer>


<script type="text/javascript">

	let projectWorkMemberSelectBtn = $("#projectWorkMemberSelectBtn");
	let projectWorkMemberAddBtn = $("#projectWorkMemberAddBtn");
	let isWorkMemberRemoveBtn = $(".isWorkMemberRemoveBtn");
	let projectWorkAddBtn = $("#projectWorkAddBtn");
	let proWorkListBtn = $("#proWorkListBtn");
	let proMyWorkListBtn = $("#proMyWorkListBtn");
	let projectWorkDetailBtn = $("#projectWorkDetailBtn");
	let projectWorkPntNoSelectBtn = $("#projectWorkPntNoSelectBtn");
	let projectWorkPntNoAddBtn = $("#projectWorkPntNoAddBtn");
	let projectWorkDeleteBtn = $(".projectWorkDeleteBtn");
	let projectWorkUpdateFormBtn = $(".projectWorkUpdateFormBtn");
	let projectWorkUpdateBtn = $(".projectWorkUpdateBtn");
	
	let proWorkListDsip = $("#proWorkListDsip")
	let projectMemberListDisp = $("#projectMemberListDisp");
	let projectWorkMemberSelectListDisp = $("#projectWorkMemberSelectListDisp");
	let projectWorkSelectDetailDisp = $("#projectWorkSelectDetailDisp");
	let proMyWorkListDsip = $("#proMyWorkListDsip");
	let projectWorkPntNoDisp = $("#projectWorkPntNoDisp");
	let projectWorkPntNoSelectDisp = $("#projectWorkPntNoSelectDisp");
	let isWorkMember = $(".isWorkMember");
	
	let projectWorkDetailForm = $(".projectWorkDetailForm");
	
	// 프로젝트 목록 리스트 html
	let makeProjectWorkListHtml = function(work){
		let projectWorkListHtml = "";
			projectWorkListHtml += `
				<tr>
					<td>
						<input class="form-check-input workNoUpCheck" data-work-no="\${work.workNo}" type="checkbox" value="">		
					</td>
					<td>
						\${work.workNo}
					</td>
					<td>
						<a id="projectWorkDetailBtn" data-bs-toggle="modal" data-bs-target="#projectWorkDetailModal" data-work-no="\${work.workNo}">
							\${work.workTitle}
						</a>
					</td>
					<td>
			`					
					for (var j = 0; j < work.workChargerList.length; j++) {
			projectWorkListHtml += `
					<p>
						<img src="${pageContext.request.contextPath }/resources/images/pms/200.png"
							width="48" height="48" class="rounded-circle me-2"
							alt="Avatar">
						\${work.workChargerList[j].memEmail}
					</p>
					`
					}
					
			projectWorkListHtml +=`
					</td>
					<td>
						<input type="date" name="workSdate" class="form-control" value="\${work.workSdate}"/>
					</td>
					<td>
						<input type="date" name="workEdate" class="form-control" value="\${work.workEdate}"/>
					</td>
					<td>
						<select name="workOrderCd" class="form-control">
							<option value="WO001" selected>낮음</option>
							<option value="WS002">보통</option>
							<option value="WS003">높음</option>
						</select>
					</td>
					<td>
						<select name="workStateCd" class="form-control">
							<option value="WS001" selected>시작전</option>
							<option value="WS002">진행중</option>
							<option value="WS003">이슈발생</option>
							<option value="WS004">보류</option>
							<option value="WS005">종료</option>
						</select>
					</td>
				</tr>
				`;
		
		return projectWorkListHtml;
	}
	
	// 프로젝트 목록 리스트 html (상위 작업이 있는 경우)
	let makeProjectWorkFntNoListHtml = function(workList){
		let projectWorkFntNoListHtml = "";

		
		for (var i = 0; i < workList.length; i++) {

			projectWorkFntNoListHtml += `
				<tr>
					<td>
						<input class="form-check-input workNoDownCheck" data-work-pnt-no="\${workList[i].workPntNo}" data-work-no="\${workList[i].workNo}" type="checkbox" value="">
					</td>
					<td style="background-color:#e9ecef;">
					<p>ㄴ\${workList[i].workNo}</p>
					</td>
					<td>
						<a id="projectWorkDetailBtn" data-bs-toggle="modal" data-bs-target="#projectWorkDetailModal" data-work-no="\${workList[i].workNo}">
							\${workList[i].workTitle}
						</a>
					</td>
					<td>
					`;
					
					for (var j = 0; j < workList[i].workChargerList.length; j++) {
			projectWorkFntNoListHtml += `
					<p>
						<img src="${pageContext.request.contextPath }/resources/images/pms/200.png"
							width="48" height="48" class="rounded-circle me-2"
							alt="Avatar">
						\${workList[i].workChargerList[j].memEmail}
					</p>`	
					}
					
			projectWorkFntNoListHtml +=`
					</td>
					<td>
						<input type="date" name="workSdate" class="form-control" value="\${workList[i].workSdate}"/>
					</td>
					<td>
						<input type="date" name="workEdate" class="form-control" value="\${workList[i].workEdate}"/>
					</td>
					<td>
						<select name="workOrderCd" class="form-control">
							<option value="WO001" selected>낮음</option>
							<option value="WS002">보통</option>
							<option value="WS003">높음</option>
						</select>
					</td>
					<td>
						<select name="workStateCd" class="form-control">
							<option value="WS001" selected>시작전</option>
							<option value="WS002">진행중</option>
							<option value="WS003">이슈발생</option>
							<option value="WS004">보류</option>
							<option value="WS005">종료</option>
						</select>
					</td>
				</tr>
				`
				
			}
		
		return projectWorkFntNoListHtml;
	}
	
	// 프로젝트 참여 멤버 리스트 html, 이미 선택이 되어있다면 노출되지 않는다.
	let makeProjectMemberListHtml = function(memberList){
		
		let isWorkMemberInputFind = $(".isWorkMember").find("input");
		let isWorkMembers = [];
		for(let i=0; i<isWorkMemberInputFind.length; i++){
			isWorkMembers.push(isWorkMemberInputFind[i].dataset.workIs);
		}
		
		let projectMemberListHtml = "";
		for(let i=0; i < memberList.length; i++){
			if(isWorkMembers.indexOf(memberList[i].memEmail) < 0){
				projectMemberListHtml += `
					<tr>
						<td>
							<input class="form-check-input" type="checkbox" data-mem-Email="\${memberList[i].memEmail}" value="">
						</td>
						<td>
							<img
							src="${pageContext.request.contextPath }/resources/images/pms/200.png"
							width="48" height="48" class="rounded-circle me-2" alt="Avatar">
							\${memberList[i].memEmail}
						</td>
						<td>\${memberList[i].mcodeNm}</td>
						<td>온라인</td>
					</tr>
				`;
			}
		};
		return projectMemberListHtml;
	}
	
	// 프로젝트 상위 작업 목록 List Disp Html
	let makeProjectWorkPntNoListHtml = function(workList){
		let projectWorkPntNoListHtml = "";
			for(let i=0; i < workList.length; i++){
					projectWorkPntNoListHtml += `
						<tr>
							<td>
								<input name="workPntNo" class="form-check form-check-inline" type="radio" data-work-pnt-No="\${workList[i].workNo}" value="\${workList[i].workNo}">
							</td>
							<td>
								\${workList[i].workNo}
							</td>
							<td>
								\${workList[i].workTitle}
							</td>
						</tr>
					`;
				
			
			};
		return projectWorkPntNoListHtml;
	}
	
	// 프로젝트 상위 작업 선택한 Disp Html
	let makeProjectWorkPntNoSelectHtml = function(pntNo){
		let projectWorkPntNoSelectHtml = "";
		projectWorkPntNoSelectHtml += `
					<div class="me-4 isWorkPntNo">
						<input name="workPntNo" type="hidden" value="\${pntNo}">
						<div class="btn btn-square btn-primary btn-sm isWorkPntNoRemoveBtn"><span>\${pntNo}</span></div>
						<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkPntNoRemoveBtn"><span>X</span></div>
					</div>
				`;

		return projectWorkPntNoSelectHtml;
	}
	
	// 프로젝트 작업 담당자 Disp Html
	let makeProjectWorkMemberSelectListHtml = function(memEmailList){
		let projectWorkMemberSelectListHtml = "";
			for(let i=0; i < memEmailList.length; i++){
				projectWorkMemberSelectListHtml += `
					<div class="me-4 isWorkMember">
						<input type="hidden" data-work-Is="\${memEmailList[i]}">
						<div class="btn btn-square btn-primary btn-sm isWorkMemberRemoveBtn"><span>\${memEmailList[i]}</span></div>
						<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkMemberRemoveBtn"><span>X</span></div>
					</div>
				`;
			};
		return projectWorkMemberSelectListHtml;
	}
	
	// 프로젝트 작업 Detail Disp Html
	let makeProjectWorkSelectDetailHtml = function(work){
		let projectWorkSelectDetailHtml = "";
		projectWorkSelectDetailHtml += `
				<div class="modal-header">
					<h5 class="modal-title">작업 자세히보기</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body row">
					<div class="col-md-8 col-xl-8">
					<form name="dataForm" class="projectWorkDetailForm">
						<table class="table table-bordered">
						<tr>
							<th>
								작업 번호
							</th>
								<td>
									<input type="text" name="workNo" Class="form-control" value="\${work.workNo}" readonly="readonly"/>
								</td>
							</tr>
							<th>
								프로젝트 번호
							</th>
								<td>
									<input type="text" name="proCode" Class="form-control" value="\${work.proCode}" readonly="readonly"/>
								</td>
							</tr>
							<th>
								작업 상위 번호
							</th>
								<td>
									<input type="text" name="workPntNo" Class="form-control" value="\${work.workPntNo}"/ readonly="readonly">
								</td>
							</tr>
							<th>
								작업 작성자
							</th>
								<td>
									<input type="text" name="memEmail" Class="form-control" value="\${work.memEmail}"/ readonly="readonly">
								</td>
							</tr>

							<tr>
								<th>
									<spring:message code="work.workTitle" />
								</th>
								<td>
									<input type="text" name="workTitle" Class="form-control workUpdateReadonlyOn" value="\${work.workTitle}"  readonly="readonly"/>
								</td>
							</tr>
							<tr>
								<th>
									담당자 별 작업 상태
								</th>
								<td>
								`;
								for (var j = 0; j < work.workChargerList.length; j++) {
						projectWorkSelectDetailHtml += `
								<p>
									<input type="text" name="workChargerListMemEmail" value="\${work.workChargerList[j].memEmail}" readonly="readonly"/>
									<div class="progress progress-sm workUpdateReadonlyOn">
										<div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="\${work.workChargerList[j].workProgress}" style="width:\${work.workChargerList[j].workProgress}%;">
										</div>
									</div>
									<select name="workChargerListProgress" class="form-control workUpdateReadonlyOn" readonly="readonly">
										<option value="\${work.workChargerList[j].workProgress}" selected>\${work.workChargerList[j].workProgress}</option>
										<option value="10">10%</option>
										<option value="20">20%</option>
										<option value="30">30%</option>
										<option value="40">40%</option>
										<option value="50">50%</option>
										<option value="60">60%</option>
										<option value="70">70%</option>
										<option value="80">80%</option>
										<option value="90">90%</option>
										<option value="100">100%</option>
									</select>
								</p>
								`;	
								}
								
						projectWorkSelectDetailHtml +=`
								</td>
							</tr>


							<tr>
								<th><spring:message code="work.workStateCd" /></th>
								<td>
									<select id="workOrderCdSelect" name="workStateCd" class="form-control workUpdateReadonlyOn" readonly="readonly">
										<option value="WS001">시작전</option>
										<option value="WS002">진행중</option>
										<option value="WS003">이슈발생</option>
										<option value="WS004">보류</option>
										<option value="WS005">종료</option>
									</select>
								</td>
							</tr>
							<tr>
								<th><spring:message code="work.workOrderCd" /></th>
								<td>
									<select id="workStateCdSelect" name="workOrderCd" class="form-control workUpdateReadonlyOn" readonly="readonly">
										<option value="WO001">낮음</option>
										<option value="WS002">보통</option>
										<option value="WS003">높음</option>
									</select>
								</td>
							</tr>
							<tr>
								<th><spring:message code="work.workSdate" /></th>
								<td>
									<input type="date" name="workSdate" value="\${work.workSdate}" class="form-control workUpdateReadonlyOn" readonly="readonly"/>
								</td>
							</tr>	
							<tr>
								<th><spring:message code="work.workEdate" /></th>
								<td>
									<input type="date" name="workEdate" value="\${work.workEdate}" class="form-control workUpdateReadonlyOn" readonly="readonly"/>
								</td>
							</tr>
							<tr>
								<th>
									작업 내용
								</th>
								<td>
									<input class="workUpdateReadonlyOn" type="text" name="workDetail" Class="form-control" value="\${work.workDetail}" readonly="readonly"/>
								</td>
							</tr>
							<tr>
								<td colspan="2">
									<div class="d-flex justify-content-end align-items-center">
										<a type="button" class="btn btn-outline-primary projectWorkUpdateFormBtn me-2" >수정폼</a>
										<a type="button" class="btn btn-primary projectWorkUpdateBtn">수정하기</a>
									</div>
								</td>
							</tr>
							
						</table>
	
					</form>
					</div>
					<div class="col-md-4 col-xl-4">
						<section class="mb-5">
		                    <div class="card bg-light">
		                        <div class="card-body">
		                            <!-- Single comment-->
		                            <div class="d-flex">
		                                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
		                                <div class="ms-3">
		                                    <div class="fw-bold">이찬영</div>
		                                    	이 작업은 제가 하겠습니다.
		                                </div>
		                            </div>
		                            <hr>
		                            <!-- Single comment-->
		                            <div class="d-flex">
		                                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
		                                <div class="ms-3">
		                                    <div class="fw-bold">김준일</div>
		                                    	이번 프로젝트에 문제가 있다고 생각됩니다.
		                                </div>
		                            </div>
		                            <hr>
		                            <!-- Comment form-->
		                            <div>
			                            <form class="mb-4">
			                            	<textarea class="form-control" rows="3" placeholder="댓글 작성"></textarea>
			                            	<div class="d-flex justify-content-end pt-2">
			                            		<button class="btn btn-primary">작성</button>
			                            	</div>
			                            </form>
		                            </div>
		                        </div>
		                    </div>
		                </section>
					</div>
				</div>
				<div class="modal-footer d-flex justify-content-end align-items-center">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
		`;
		 return projectWorkSelectDetailHtml;
	};
	
	// 프로젝트 작업 목록 가져오기, 처음에 보여주기
	projectWorkListUIData();
	
	// 프로젝트 작업 목록 버튼 클릭 시 작업 리스트 가져오기
	proWorkListBtn.on("click", function(){
		projectWorkListUIData()
	});
	
	// 프로젝트 전체 작업 목록 가져오는 함수
	function projectWorkListUIData(){
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workListView/${project.proCode}",
			method : "get",
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				proWorkListDsip.empty();
				let trTags = [];
				for(var i=0; i<resp.length; i++){
					let isWorkPntNo = [];
					console.log("no",resp[i].workNo);
					if(resp[i].workPntNo==0){
						trTags.push(makeProjectWorkListHtml(resp[i]));
					}					
					for(var j=0; j<resp.length; j++){
						if(resp[i].workNo==resp[j].workPntNo){		
							isWorkPntNo.push(resp[j]);
						}
					}
					trTags.push(makeProjectWorkFntNoListHtml(isWorkPntNo));
					
				}
				proWorkListDsip.html(trTags);

			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}
	

	// 프로젝트 전체 목록 데이터
	function projectWorkListData(){
		let retval;
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workListView/${project.proCode}",
			method : "get",
			dataType : "json",
			async :false,
			success : function(resp) {
				console.log(resp);
				retval = resp;
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		return retval
	}
	
	// 프로젝트 상위 작업 선택 버튼 클릭 시
	projectWorkPntNoSelectBtn.on("click",function(){
		projectWorkPntNoDisp.empty();
		projectWorkPntNoDisp.html(makeProjectWorkPntNoListHtml(projectWorkListData()));
		console.log(projectWorkListData());
	})

	
	// 프로젝트 나에게 담당된 작업 목록
	proMyWorkListBtn.on("click", function(){

		let data = {
				"memEmail" : "${authMember.memEmail }",
				"proCode" : "${project.proCode}"
		}
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/myWorkListView",
			method : "post",
			data : JSON.stringify(data),
			contentType : "application/json;charset=utf-8",
			dataType : "json",
			success : function(resp) {
				proMyWorkListDsip.empty();
				let trTags = [];
				for(var i=0; i<resp.length; i++){
					let isWorkPntNo = [];
					console.log("no",resp[i].workNo);
					if(resp[i].workPntNo==0){
						trTags.push(makeProjectWorkListHtml(resp[i]));
					}					
					for(var j=0; j<resp.length; j++){
						if(resp[i].workNo==resp[j].workPntNo){		
							isWorkPntNo.push(resp[j]);
						}
					}
					trTags.push(makeProjectWorkFntNoListHtml(isWorkPntNo));
				}
				proMyWorkListDsip.html(trTags);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		console.log(data);
	});
	

	
	
	// 프로젝트 참여 멤버 리스트 UI
	projectWorkMemberSelectBtn.on("click", function(){
		projectParticipateMemberListView();
	});

	
	// 프로젝트 참여 멤버 리스트 UI 함수
	function projectParticipateMemberListView(){
		$.ajax({
			url : "${pageContext.request.contextPath }/project/project/management/memberManagementList/${project.proCode }",
			method : "get",
			dataType : "json",
			success : function(resp) {
					console.log(resp.yes);
					projectMemberListDisp.empty();
					projectMemberListDisp.html(makeProjectMemberListHtml(resp.yes));
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		})
	}
	
	// 상위 작업 선택 시 상위작업 등록
	projectWorkPntNoAddBtn.on("click", function(){
		let radioCheckFind = $("input[type=radio][name=workPntNo]:checked").val();
		projectWorkPntNoSelectDisp.html(makeProjectWorkPntNoSelectHtml(radioCheckFind));
	});
	
	// 작업 담당자 선택 시 담당자 등록
	projectWorkMemberAddBtn.on("click", function(){
		let emailListData = [];
 		let checkfind = $(this).parent().parent().siblings().prevObject[0];
		let inputTags = $(checkfind).find("input");
		 for(var i=0; i<inputTags.length; i++){
			if(inputTags[i].checked){
				emailListData.push(inputTags[i].dataset.memEmail);
			}
		}
		console.log(emailListData);
		if(emailListData.length >= 0){
			if(projectWorkMemberSelectListDisp.html() == "담당자가 없습니다."){
				if(emailListData.length > 0){
					projectWorkMemberSelectListDisp.empty();
					projectWorkMemberSelectListDisp.html(makeProjectWorkMemberSelectListHtml(emailListData))					
				}else{
					projectWorkMemberSelectListDisp.empty();
					projectWorkMemberSelectListDisp.html("담당자가 없습니다.");
				}
			}else{
				projectWorkMemberSelectListDisp.append(makeProjectWorkMemberSelectListHtml(emailListData))
			}
		}else{
			projectWorkMemberSelectListDisp.empty();
			projectWorkMemberSelectListDisp.html("담당자가 없습니다.");
		}
	});
	
	// 담당자 삭제하기
	$(document).on("click", ".isWorkRemoveBtn", function(){
		if($("div").hasClass("isWorkMemberRemoveBtn")) {
			$(this).parent().remove();
			if(!$("div").hasClass("isWorkMemberRemoveBtn")){
				projectWorkMemberSelectListDisp.empty();
				projectWorkMemberSelectListDisp.html("담당자가 없습니다.");
			}
		}
		if($("div").hasClass("isWorkPntNoRemoveBtn")) {
			$(this).parent().remove();
			if(!$("div").hasClass("isWorkPntNoRemoveBtn")){
				projectWorkPntNoSelectDisp.empty();
				projectWorkPntNoSelectDisp.html("상위 작업이 없습니다.");
			}
		}
	});
	
	// 프로젝트 작업 등록
	projectWorkAddBtn.on("click", function(){
		Swal.fire({
			   title: '작업 등록 하시겠습니까?',
			   text: '다시 되돌릴 수 없습니다. 신중하세요.',
			   icon: 'warning',
			   
			   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
			   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
			   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
			   confirmButtonText: '승인', // confirm 버튼 텍스트 지정
			   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
			   
			   reverseButtons: true, // 버튼 순서 거꾸로
			   
			}).then(result => {
			   // 만약 Promise리턴을 받으면,
			   if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
					let work = $(".projectWorkAddForm").serialize();
			   
			  		$.ajax({
						url : "${pageContext.request.contextPath}/project/project/workInsert",
						method : "post",
						data : work,
						async: false,
						success : function(resp) {
							console.log(resp);
							workChargerAjax(resp);
							Swal.fire('작업 등록 완료되었습니다.', '화끈하시네요~!', 'success');
						},
						error : function(jqXHR, status, error) {
							console.log(jqXHR);
							console.log(status);
							console.log(error);
						}
					}); 
					location.href="${pageContext.request.contextPath }/project/project/workList/${project.proCode }";
			   }
			   else{
				   Swal.fire('', '작업 등록 취소하였습니다.', "failed");
				   return;
			   }
		});
		
		

	});
	
	// 프로젝트 작업 담당자 등록
	function workChargerAjax(workNo){
		let isWorkMemberInputFind = $(".isWorkMember").find("input");
		let workChargerVO = [];

 		for(let i=0; i<isWorkMemberInputFind.length; i++){
 			let data = {
					"workNo" : workNo,
					"memEmail" : isWorkMemberInputFind[i].dataset.workIs
				};
			workChargerVO.push(data);
		}
		 
 		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workChargerInsert",
			method : "post",
			data : JSON.stringify(workChargerVO),
			contentType : "application/json;charset=utf-8",
			success : function(resp) {
				console.log(resp);
				if(resp==1){
					console.log("담당자 배정 드디어 성공")
				}else{
					console.log("담당자 배정 실패")					
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		}); 
	}

	// 프로젝트 작업 자세히보기
	$(document).on("click", "#projectWorkDetailBtn", function(){
		console.log(this.dataset["workNo"]);
		let data = {
				"workNo" : Number(this.dataset["workNo"]),
				"proCode" : "${project.proCode}"
		}
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workDetail",
			method : "post",
			data : JSON.stringify(data),
			contentType : "application/json;charset=utf-8",
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				console.log(resp.workTitle);
				projectWorkSelectDetailDisp.html(makeProjectWorkSelectDetailHtml(resp));
				console.log(makeProjectWorkSelectDetailHtml(resp));
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	// 작업 삭제
	projectWorkDeleteBtn.on('click', function(){

		Swal.fire({
			   title: '삭제 하시겠습니까?',
			   text: '다시 되돌릴 수 없습니다. 신중하세요.',
			   icon: 'warning',
			   
			   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
			   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
			   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
			   confirmButtonText: '승인', // confirm 버튼 텍스트 지정
			   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
			   
			   reverseButtons: true, // 버튼 순서 거꾸로
			   
			}).then(result => {
			   // 만약 Promise리턴을 받으면,
			   if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
				   
				   let workNoUpListData = []; 
					let workNoDownListData = []; 
					let workNoDownListDataObject = new Object();
					let inputUpTags = $(".workNoUpCheck").find("input").prevObject;
					let inputDownTags = $(".workNoDownCheck").find("input").prevObject;

				 	for(var i=0; i<inputUpTags.length; i++){
						if(inputUpTags[i].checked){
							workNoUpListData.push(inputUpTags[i].dataset.workNo);
						}
					}
					for(var i=0; i<inputDownTags.length; i++){
						if(inputDownTags[i].checked){
							let is_existed = Object.keys(workNoDownListDataObject).includes(inputDownTags[i].dataset.workPntNo);	
							if(!is_existed){
								workNoDownListData = [];
							}
							workNoDownListData.push(inputDownTags[i].dataset.workNo);
							workNoDownListDataObject[inputDownTags[i].dataset.workPntNo] = workNoDownListData;
						}
					}
					for(var i=0; i<workNoUpListData.length; i++){
						if(Object.keys(workNoDownListDataObject).includes(workNoUpListData[i])){
							delete workNoDownListDataObject[workNoUpListData[i]];
						}
					}
					
					let lastWorkNoList = Object.values(workNoDownListDataObject);

					let lastWorkUpListObject = new Object();
					
					console.log("하위작업",lastWorkNoList);
					console.log("상위작업",workNoUpListData);
					console.log("",workNoDownListDataObject);
					
					lastWorkUpListObject
					
					let workVOList = [];
					let upWorkVOList = [];

			 		for(var i=0; i<lastWorkNoList.length; i++){
			 			for(var j=0; j<lastWorkNoList[i].length; j++){
				 			let data = {
									"workNo" : lastWorkNoList[i][j]
								};
				 			workVOList.push(data);
			 			}
					}
			 		
			 		for(var i=0; i<workNoUpListData.length; i++){
			 			let data = {
			 					"workNo" : workNoUpListData[i]
			 			};
			 			upWorkVOList.push(data);
			 		}
			 		
			 		console.log("upWorkVOList",upWorkVOList);
			 		console.log("마지막",workVOList)
			 		
			 		sessionStorage.setItem("upWorkVOList",upWorkVOList);
			 		
			 		let workDownResultDataList = projectWorkDownList(upWorkVOList);
			 		for(var i=0; i<workDownResultDataList.length; i++){
			 			for(var j=0; j<workDownResultDataList[i].length; j++){
			 				workVOList.push(workDownResultDataList[i][j]);
			 			}
			 		}
			 		
			 		$.ajax({
						url : "${pageContext.request.contextPath}/project/project/workDelete",
						method : "post",
						data : JSON.stringify(workVOList),
						async: false,
						contentType : "application/json;charset=utf-8",
						dataType : "json",
						success : function(resp) {
							console.log("성공",resp);
							console.log(JSON.parse(sessionStorage.getItem("workVOList")));
							
					 		if(upWorkVOList!=null){
					 	 		$.ajax({
					 				url : "${pageContext.request.contextPath}/project/project/workDelete",
					 				method : "post",
					 				data : JSON.stringify(upWorkVOList),
					 				async: false,
					 				contentType : "application/json;charset=utf-8",
					 				dataType : "json",
					 				success : function(resp) {
										console.log(resp);
					 				},
					 				error : function(jqXHR, status, error) {
					 					console.log(jqXHR);
					 					console.log(status);
					 					console.log(error);
					 				}
					 			});
					 		}
					 		
							projectWorkListUIData();
						},
						error : function(jqXHR, status, error) {
							console.log(jqXHR);
							console.log(status);
							console.log(error);
						}
					});		
				   
			       Swal.fire('삭제 완료되었습니다.', '화끈하시네요~!', 'success');
			   }
			   else{
				   Swal.fire('', '삭제 취소하였습니다.', "failed");
				   return;
			   }
			});
		
		
		
	});
	
	// 현재 작업의 하위작업 목록 데이터 가져다줌
	function projectWorkDownList(workUpList){
		console.log("hi");
		console.log(workUpList);
		let resultData;
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workDownList",
			method : "post",
			data : JSON.stringify(workUpList),
			async: false,
			contentType : "application/json;charset=utf-8;",
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				resultData = resp;
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		return resultData;
	}
	
	
	// 작업 수정폼 버튼 클릭 시
	$(document).on("click", ".projectWorkUpdateFormBtn", function(){
		let formFind = $(this).parent().siblings().find("form");
		let find23 = formFind.find("input[name='workNo']");
		if($(".workUpdateReadonlyOn").attr('readonly') == undefined){
			$(".workUpdateReadonlyOn").attr("readonly",true); 
		}else{
			$(".workUpdateReadonlyOn").removeAttr("readonly"); 
		}
	});


	
	// 인수 라이브러리1
	function fn_seri(myForm){
	    let elems = myForm.elements
	    let myObj = {}
	    for(let i=0; i<elems.length; i++){
	        if(myObj.hasOwnProperty(elems[i].name)){
	        	if(Array.isArray(myObj[elems[i].name])){            		
	          	myObj[elems[i].name].push(elems[i].value);
	        	}else{            		
	          	let array = [myObj[elems[i].name]]
	          	array.push(elems[i].value);
	          	myObj[elems[i].name] = array;
	        	}
	        }else{
	          myObj[elems[i].name] = elems[i].value;
	        }
	    }
		return myObj;
	}
	
	// 작업 수정 버튼 클릭 시
	$(document).on("click", ".projectWorkUpdateBtn", function(){
		Swal.fire({
			   title: '작업 수정 하시겠습니까?',
			   text: '다시 되돌릴 수 없습니다. 신중하세요.',
			   icon: 'warning',
			   
			   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
			   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
			   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
			   confirmButtonText: '승인', // confirm 버튼 텍스트 지정
			   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
			   
			   reverseButtons: true, // 버튼 순서 거꾸로
			   
			}).then(result => {
			   // 만약 Promise리턴을 받으면,
			   if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
				   
				   let data = new Object();
					let cnt = 0;
					const formData2 = new FormData($(".projectWorkDetailForm")[0]);
					let entries = formData2.entries();
					for (const pair of entries) {
					    console.log(pair[0]+ ', ' + pair[1]); 
					}
					let dataObject = {};
					data = fn_seri(document.forms[1]);
					let workNoData = data.workNo;
					let workProgressList = data.workChargerListProgress;
					let workProgressMemEmail = data.workChargerListMemEmail;
					delete data.workChargerListProgress;
					delete data.workChargerListMemEmail;
					
					let workChargerList = [];
					for(let i=0; i<workProgressMemEmail.length; i++){
						let workChargerData = {};
						workChargerData['workNo'] = workNoData;
						workChargerData['memEmail'] = workProgressMemEmail[i];
						workChargerData['workProgress'] = workProgressList[i];
						workChargerList.push(workChargerData);
					}
					data['workChargerList'] = workChargerList;
					
					console.log("수정폼 data : ",data);
					
			 		$.ajax({
						url : "${pageContext.request.contextPath}/project/project/workUpdate",
						method : "post",
						data : JSON.stringify(data),
						contentType : "application/json;charset=utf-8;",
						success : function(resp) {
							console.log(resp);
						},
						error : function(jqXHR, status, error) {
							console.log(jqXHR);
							console.log(status);
							console.log(error);
						}
					});  
				   
			       Swal.fire('작업 수정 완료되었습니다.', '화끈하시네요~!', 'success');
			      
			   }
			   else{
				   Swal.fire('', '작업 수정 취소하였습니다.', "failed");
				   return;
			   }
			});	
	});


</script>


