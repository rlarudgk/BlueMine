package kr.or.ddit.project.home.service;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.project.home.dao.ProjectDAO;
import kr.or.ddit.project.home.vo.ParticipateVO;
import kr.or.ddit.project.home.vo.ProjectVO;
import kr.or.ddit.vo.PagingVO;

@Service
public class ProjectServiceImpl implements ProjectService {
	
	@Inject
	private ProjectDAO projectDAO;

	@Override
	public ProjectVO retrieveProject(String proCode) {
		ProjectVO project = projectDAO.selectProject(proCode);
		return project;
	}

	@Override
	public List<ProjectVO> retrieveProjectListAll(PagingVO<ProjectVO> pagingVO) {
		int totalRecord = projectDAO.selectTotalRecord(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		List<ProjectVO> projectList = projectDAO.selectProjectListAll(pagingVO);
		pagingVO.setDataList(projectList);
		
		return projectList;
	}

	@Override
	public List<ProjectVO> retrieveMyProjectListAll(String memEmail) {
		List<ProjectVO> projectList = projectDAO.selectMyProjectListAll(memEmail);
		return projectList;
	}
	
	@Override
	public List<ProjectVO> retrieveMyProjectSelectList(String memEmail, Map<String, String> map) {
		List<ProjectVO> projectList = projectDAO.selectMyProjectSelectList(memEmail, map);
		return projectList;
	}

	@Override
	public ServiceResult createProject(ProjectVO project) {
		ServiceResult result = null;
		int rowcnt = projectDAO.insertProject(project);
		result = rowcnt > 0 ? ServiceResult.OK : ServiceResult.FAIL;
		return result;
	}
	
	@Override
	public ServiceResult createProjectParticipate(ParticipateVO participate) {
		ServiceResult result = null;
		int rowcnt = projectDAO.insertProjectParticipate(participate);
		result = rowcnt > 0 ? ServiceResult.OK : ServiceResult.FAIL;
		return result;
	}

	@Override
	public ServiceResult modifyProject(ProjectVO project) {
		ServiceResult result = null;
		int rowcnt = projectDAO.updateProject(project);
		result = rowcnt > 0 ? ServiceResult.OK : ServiceResult.FAIL;
		return result;
	}

	@Override
	public ServiceResult removeProject(String proCode) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<ProjectVO> retrieveProjectParticipateList(String memEmail) {
		List<ProjectVO> projectList = projectDAO.selectProjectParticipateList(memEmail);
		return projectList;
	}

	@Override
	public ServiceResult modifyProjectParticipate(ParticipateVO participate) {
		ServiceResult result = null;
		int rowcnt = projectDAO.updateProjectParticipate(participate);
		result = rowcnt > 0 ? ServiceResult.OK : ServiceResult.FAIL;
		return result;
	}

	@Override
	public List<ParticipateVO> retrieveProMemList(String proCode) {
		List<ParticipateVO> memList = projectDAO.selectProMemList(proCode);
		return memList;
	}







}
