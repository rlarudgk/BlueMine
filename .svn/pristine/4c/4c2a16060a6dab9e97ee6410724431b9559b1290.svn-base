<%@page import="java.util.Date"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>    
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form" %>
<%String log = new Date(session.getCreationTime()).toLocaleString(); %>

<security:authentication property="principal.realMember" var="authMember"/>

<main class="content">
	<div class="container-fluid p-0">
		<h1 class="h3 mb-3">내 프로젝트</h1>
		<nav aria-label="breadcrumb">
			<ol class="breadcrumb">
				<li class="breadcrumb-item"><a href="#">Pms</a></li>
				<li class="breadcrumb-item"><a href="#">Home</a></li>
				<li class="breadcrumb-item active">내 프로젝트</li>
			</ol>
		</nav>
		<hr>
		
		<div class="card">
			<div class="card-header">
				<ul class="nav nav-tabs card-header-tabs pull-right" role="tablist">
					<li class="nav-item" role="presentation">
						<a id="proAll" class="nav-link active" data-bs-toggle="tab" href="#tab-1" aria-selected="true" role="tab">전체</a>
					</li>
					<li class="nav-item" role="presentation">
						<a id="proBefore" class="nav-link" data-bs-toggle="tab" href="#tab-2" aria-selected="false" role="tab" tabindex="-1">시작전</a>
					</li>
					<li class="nav-item" role="presentation">
						<a id="proIng" class="nav-link" data-bs-toggle="tab" href="#tab-3" aria-selected="false" tabindex="-1" role="tab">진행중</a>
					</li>
					<li class="nav-item" role="presentation">
						<a id="proEnd" class="nav-link" data-bs-toggle="tab" href="#tab-4" aria-selected="false" tabindex="-1" role="tab">종료</a>
					</li>
					<li class="nav-item" role="presentation">
						<a id="proTotal" class="nav-link" data-bs-toggle="tab" href="#tab-5" aria-selected="false" tabindex="-1" role="tab">모든 프로젝트 (임시)</a>
					</li>
					<li class="nav-item" role="presentation">
						<a id="proInvite" class="nav-link" data-bs-toggle="tab" href="#tab-6" aria-selected="false" tabindex="-1" role="tab">초대받은 프로젝트 목록 (임시)</a>
					</li>
				</ul>
			</div>
			<div class="card-body">
				<div class="tab-content">
					<!-- 참여중인 전체 프로젝트 -->
					<div class="tab-pane fade active show" id="tab-1" role="tabpanel">
						<div id="proAllDisp" class="row">
						</div>
					</div>
					<!-- 시작전 프로젝트 -->
					<div class="tab-pane fade" id="tab-2" role="tabpanel">
						<div id="proBeforeDisp" class="row">
						</div>
					</div>
					<!-- 진행중 프로젝트 -->
					<div class="tab-pane fade" id="tab-3" role="tabpanel">
						<div id="proIngDisp" class="row">
						</div>
					</div>
					<!-- 종료된 프로젝트 -->
					<div class="tab-pane fade" id="tab-4" role="tabpanel">
						<div id="proEndDisp" class="row">
						</div>
					</div>
					<!-- 모든 프로젝트 목록 (임시) -->
					<div class="tab-pane fade" id="tab-5" role="tabpanel">
						<!-- 검색창 -->
						<div class="row">
							<div class="col-sm-12 col-md-7">
								<div class="d-flex justify-content-start"></div>
							</div>
							<div class="col-sm-12 col-md-5">
								<div id="searchUI" class="d-flex justify-content-end">
									<select name="searchOption" class="form-control" style="width:20%;">
										<option value="total">전체</option>
										<option value="title">제목</option>
										<option value="writer">생성자</option>
									</select>
 									<input class="bg-light" type="text" name="searchWord" placeholder=""/>
									<input class="btn btn-primary" type="button" value="검색" id="searchProjectBtn"  /> 
								</div>
							</div>
						</div>
						<hr>
						<div id="proTotalDisp" class="row"></div>
						<!-- paging -->
						<hr>
						<div class="row">
							<div class="col-sm-12 col-md-12">
								<div class="pagingArea d-flex justify-content-center"></div>
							</div>
						</div>
						<!-- 임시 확인용 -->
						<form id="searchForm" >
							<input type="text" name="page" />	
							<input type="text" name="searchOption" placeholder="선택"/>
							<input type="text" name="searchWord" placeholder="검색"/>
							<security:csrfInput/>
						</form>
					</div>
				
					<!-- 프로젝트 초대 목록 (임시) -->
					<div class="tab-pane fade" id="tab-6" role="tabpanel">
						<div id="proInviteListDisp" class="row">
						</div>
					</div>
				</div>
			</div>			

		</div>
	</div>
</main>


<script type="text/javascript">

	let proAll = $("#proAll");
	let proBefore = $("#proBefore");
	let proIng = $("#proIng");
	let proEnd = $("#proEnd");
	let proTotal = $("#proTotal");
 	let proInvite = $("#proInvite")
 	
 	let participateAcceptBtn = $(".participateAcceptBtn");
	
	let proAllDisp = $("#proAllDisp");
	let proBeforeDisp = $("#proBeforeDisp");
	let proIngDisp = $("#proIngDisp");
	let proEndDisp = $("#proEndDisp");
	
	let proTotalDisp = $("#proTotalDisp");
	let proInviteListDisp = $("#proInviteListDisp");

	// Project List Html
	let makeProjectListHtml = function(projectList){
		let projectListHtml = "";
		for(let i=0; i < projectList.length; i++){
			projectListHtml += `
			<div class="col-12 col-md-6 col-lg-3">
				<div class="card">
					<a href="${pageContext.request.contextPath}/project/project/Home/\${projectList[i].proCode}">
						<img class="card-img-top" src="${pageContext.request.contextPath }/resources/images/pms/800.png" alt="Project">
					</a>
					<div class="card-body">
						<ul class="list-unstyled mb-0">
							<div style="dsiapy:flex;flex-direction: column;">
								<h5 class="h6 card-title">\${projectList[i].proTitle }</h5>
								<li class="mb-1"><i class="align-middle" data-feather="user"></i> <span class="align-middle text-secondary">\${projectList[i].memName }</span></li>
							</div>
							<hr>
							<li><span class="badge bg-primary rounded-pill">시작</span> \${projectList[i].proSdate }</li>
							<li><span class="badge bg-secondary rounded-pill">종료</span> \${projectList[i].proEdate }</li>
						</ul>
					</div>
				</div>
			</div>`;
		}
		
		return projectListHtml;
	}
	
	
	// 초대받은 Project List Html
	let makeProInviteListHtml = function(projectList){
		let proInviteListHtml = "";
		for(let i=0; i < projectList.length; i++){
			proInviteListHtml += `
			<div class="col-12 col-md-6 col-lg-3">
				<div class="card">

					<img class="card-img-top" src="${pageContext.request.contextPath }/resources/images/pms/800.png" alt="Project">

					<div class="card-body">
						<ul class="list-unstyled mb-0">
							<div style="dsiapy:flex;flex-direction: column;">
								<h5 class="h6 card-title">\${projectList[i].proTitle }</h5>
								<li class="mb-1"><i class="align-middle" data-feather="user"></i> <span class="align-middle text-secondary">\${projectList[i].memName }</span></li>
							</div>
							<hr>
							<li><span class="badge bg-primary rounded-pill">시작</span> \${projectList[i].proSdate }</li>
							<li><span class="badge bg-secondary rounded-pill">종료</span> \${projectList[i].proEdate }</li>
						</ul>
					</div>
					<button type="button" data-pro-Code="\${projectList[i].proCode}" data-mem-Email="${authMember.memEmail }" data-part-Yn="1" class="participateAcceptBtn btn btn-outline-primary">수락하기</button>
					<button type="button" data-pro-Code="\${projectList[i].proCode}" data-mem-Email="${authMember.memEmail }" data-part-Yn="2" class="participateAcceptBtn btn btn-outline-primary">거절하기</button>
				</div>
			</div>`;
		}
		return proInviteListHtml;
	}
	
	// Project Html
	let makeProjectHtml = function(project){
		let projectHtml = "";
		projectHtml += `
		<div class="col-12 col-md-6 col-lg-3">
			<div class="card">
				<a href="${pageContext.request.contextPath}/project/project/Home/\${project.proCode}">
					<img class="card-img-top" src="${pageContext.request.contextPath }/resources/images/pms/800.png" alt="Project">
				</a>
				<div class="card-body">
					<ul class="list-unstyled mb-0">
						<div style="dsiapy:flex;flex-direction: column;">
							<h5 class="h6 card-title">\${project.proTitle }</h5>
							<li class="mb-1"><i class="align-middle" data-feather="user"></i> <span class="align-middle text-secondary">\${project.memName }</span></li>
						</div>
						<hr>
						<li><span class="badge bg-primary rounded-pill">시작</span> \${project.proSdate }</li>
						<li><span class="badge bg-secondary rounded-pill">종료</span> \${project.proEdate }</li>
					</ul>
				</div>
			</div>
		</div>`;
		return projectHtml;
	}

	

	// 프로젝트가 없는 경우 html
	let makeNoProjectHtml = function(){
		let projectHtml = "";
		projectHtml += `
		<div class="col-12 col-md-6 col-lg-3">
			<div class="card">
				<p>프로젝트가 없습니다.</p>
			</div>
		</div>`;
		return projectHtml;
	}
	
	// paging html
	let pagingArea = $(".pagingArea").on("click", "a.paging", function(event){
		event.preventDefault();
		let page = $(this).data("page");
		if(!page) return false;
		searchForm.find("[name=page]").val(page);
		searchForm.submit();
		return false;
	});
	

	// 전체 내 프로젝트 첫 UI
	$.ajax({
		url :"${pageContext.request.contextPath }/project/myProject/proAll",
		method : "get",
		dataType : "json",
		success : function(resp) {
			if(resp.length>0){					
				proAllDisp.html(makeProjectListHtml(resp));
			}else{
				proAllDisp.html(makeNoProjectHtml());
			}
		},
		error : function(jqXHR, status, error) {
			console.log(jqXHR);
			console.log(status);
			console.log(error);
		}
	});
	 	
	// 전체 내 프로젝트 목록
	proAll.on('click', function(){		
		let proSelectId = $(this).attr("id");
		$.ajax({
			url :"${pageContext.request.contextPath }/project/myProject/"+proSelectId,
			method : "get",
			dataType : "json",
			success : function(resp) {
				if(resp.length>0){					
					proAllDisp.html(makeProjectListHtml(resp));
				}else{
					proAllDisp.html(makeNoProjectHtml());
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	// 시작 전 내 프로젝트 목록
	proBefore.on('click', function(){		
		let proSelectId = $(this).attr("id");
		$.ajax({
			url :"${pageContext.request.contextPath }/project/myProject/"+proSelectId,
			method : "get",
			dataType : "json",
			success : function(resp) {
				if(resp.length>0){					
					proBeforeDisp.html(makeProjectListHtml(resp));
				}else{
					proBeforeDisp.html(makeNoProjectHtml());
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	// 진행중인 내 프로젝트 목록
	proIng.on('click', function(){		
		let proSelectId = $(this).attr("id");
		$.ajax({
			url :"${pageContext.request.contextPath }/project/myProject/"+proSelectId,
			method : "get",
			dataType : "json",
			success : function(resp) {
				if(resp.length>0){					
					proIngDisp.html(makeProjectListHtml(resp));
				}else{
					proIngDisp.html(makeNoProjectHtml());
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	// 종료된 내 프로젝트 목록
	proEnd.on('click', function(){		
		let proSelectId = $(this).attr("id");
		$.ajax({
			url :"${pageContext.request.contextPath }/project/myProject/"+proSelectId,
			method : "get",
			dataType : "json",
			success : function(resp) {
				if(resp.length>0){					
					proEndDisp.html(makeProjectListHtml(resp));
				}else{
					proEndDisp.html(makeNoProjectHtml());
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	// 전체 프로젝트 목록
	proTotal.on('click', function(){		
		let proSelectId = $(this).attr("id");
		$.ajax({
			url :"${pageContext.request.contextPath }/project/projectListAll",
			method : "get",
			dataType : "json",
			success : function(resp) {
				proTotalDisp.empty();
				pagingArea.empty();
				console.log(resp);
				let dataList = resp.pagingVO.dataList;
				let trTags = [];
				
				if(dataList){
					$.each(dataList, function(index, project){
						trTags.push(makeProjectHtml(project));
					});
				}else{
					trTags.push(makeNoProjectHtml());
				}
				proTotalDisp.html(trTags);
				if(resp.pagingHTML)
					pagingArea.html(resp.pagingHTML);		
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	})
	
	// 초대받은 프로젝트 목록
	proInvite.on('click', function(){
		proInviteListView();
	});
	
	// 초대받은 프로젝트 list view
	function proInviteListView(){
		$.ajax({
			url :"${pageContext.request.contextPath }/project/myProject/participateList",
			method : "get",
			dataType : "json",
			success : function(resp) {
				if(resp.length>0){					
					proInviteListDisp.html(makeProInviteListHtml(resp));
					projectParticipateUpdate();
				}else{
					proInviteListDisp.html(makeNoProjectHtml());
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}
	
	// 초대받은 프로젝트 수락하기
	function projectParticipateUpdate(){
		$(".participateAcceptBtn").on('click', function(){
			let data = 
				{ 
					"memEmail" : this.dataset.memEmail, 
					"proCode" : this.dataset.proCode,
					"partYn" : this.dataset.partYn
				}
			console.log(data);
 			$.ajax({
				url : "${pageContext.request.contextPath}/project/myProject/participateAccept",
				method : "post",
				data : data,
				success : function(resp) {
					if(resp=="1"){
						proInviteListView();						
					}
					if(resp=="0"){
						console.log("실패");
					}
				},
				error : function(jqXHR, status, error) {
					console.log(jqXHR);
					console.log(status);
					console.log(error);
				}
			}); 
		});
	}
	
	
	// 프로젝트 검색
	let searchForm = $("#searchForm").on("submit", function(event){
		event.preventDefault();
		
		let method = this.method;
		let queryString = $(this).serialize();

		$.ajax({
			
			url : "${pageContext.request.contextPath }/project/projectListAll",
			method : method,
			data : queryString ,
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				proTotalDisp.empty();
				pagingArea.empty();
				
				pagingArea.empty();
				searchForm[0].page.value="";
				
				let dataList = resp.pagingVO.dataList;
				let trTags = [];
				
				console.log(dataList.length>0);
				
				if(dataList.length>0){
					$.each(dataList, function(index, project){
						trTags.push(makeProjectHtml(project));
					});
				}else{
					trTags.push(makeNoProjectHtml());
				}
				console.log(trTags);
				proTotalDisp.html(trTags);
				if(resp.pagingHTML)
					pagingArea.html(resp.pagingHTML);		
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		return false;
	});
	
	// 검색 Form 보내기
	let searchUI = $("#searchUI").on("click", "#searchProjectBtn", function(){
		let inputs = searchUI.find(":input[name]");
		$.each(inputs, function(index, input){
			let name = this.name;
			let value = $(this).val();
			searchForm[0][name].value = value;
		});
		searchForm.submit();
	});
	
	let log = "<%=log%>";
	console.log("log",log)
	$.ajax({
		url : "${pageContext.request.contextPath }/member/memberSomeUpdate",
		method : "post",
		data : {memDateLog : log},
		success : function(resp) {
			console.log("통신성공",resp)
		},
		error : function(jqXHR, status, error) {
			console.log(jqXHR);
			console.log(status);
			console.log(error);
		}
	})

</script>