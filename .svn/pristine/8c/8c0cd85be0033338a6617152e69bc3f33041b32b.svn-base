<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>

<security:authentication property="principal.realMember" var="authMember"/>


<!--====================== 작업 추가 Form 모달창 ======================-->
<div class="modal fade" id="projectWorkInsertModal" tabindex="-1" style="display: none;" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-xl" role="document">
		<div class="modal-content" id="projectWorkSelectDetailDisp">
			<div class="modal-header">
				<h5 class="modal-title">작업 추가하기</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body row">
				<div class="col-md-12 col-xl-12">
					<!--=========== 작업 추가 Form  ==========-->
					<form class="projectWorkAddForm">
						<!-- project.proCode가 하나 더 insert된다 이거 찾아보자.. -->
						<%-- <input type="hidden" name="proCode" value="${project.proCode }"> --%>
						<table class="table table-bordered">
							<tr>
								<th rowspan="2">
									상위 작업
								</th>
								<td>
									<!-- <input type="text" name="workPntNo" Class="form-control"  /> -->
									<!-- <select id="PWAworkPntNo"> -->
									<select id="projectWorkPntNoSelectBtn">
										<option value="0">상위 작업 선택</option>
									</select>
								</td>
							</tr>	
							<tr>
								<td>
									<div id="projectWorkPntNoSelectDisp" class="d-flex justify-content-start align-items-center p-2">상위작업이 없습니다.</div>
								</td>
							<tr>
							<tr>
								<th>
									작업 제목
								</th>
								<td>
									<input type="text" name="workTitle" Class="form-control"  />
								</td>
							</tr>	
							<tr>
								<th>
									작업 작성자
								</th>
								<td>
									<span style="padding:8px;">${authMember.memEmail }</span><input type="hidden" name="memEmail" Class="form-control" value="${authMember.memEmail }" />
								</td>
							</tr>	
							<tr>
								<th rowspan="2">
									담당자 선택
								</th>
								<td>
									<select id="PWAParticipateMemEmail">
										<option value="0">담당자 없음</option>
									</select>
								</td>
							
							</tr>	
							<tr>
								<td>
									<div id="projectWorkMemberSelectListDisp" class="d-flex justify-content-start align-items-center p-2">담당자가 없습니다.</div>
								</td>
							<tr>
								<th>작업 시작 날짜</th>
								<td>
									<input type="date" name="workSdate" class="form-control"/>
								</td>
							</tr>
							<tr>
								<th>작업 상태</th>
								<td>
									<select name="workStateCd" class="form-control">
										<option value="WS001" selected>시작전</option>
										<option value="WS002">진행중</option>
										<option value="WS003">이슈발생</option>
										<option value="WS004">보류</option>
										<option value="WS005">종료</option>
									</select>
								</td>
							</tr>
							<tr>
								<th>작업 우선순위</th>
								<td>
									<select name="workOrderCd" class="form-control">
										<option value="WO001" selected>낮음</option>
										<option value="WS002">보통</option>
										<option value="WS003">높음</option>
									</select>
								</td>
							</tr>
							<tr>
								<th>작업 종료 날짜</th>
								<td>
									<input type="date" name="workEdate" class="form-control"/>
								</td>
							</tr>
							<tr>
								<th>작업 내용</th>
								<td>
								    <textarea name="workDetail" rows="10" cols="80"></textarea>
								</td>
							</tr>
						</table>
						<div class="d-flex justify-content-end">
							<a id="projectWorkAddBtn" class="btn btn-primary">작업 등록</a>
						</div>
					</form>
				</div>

			</div>
			<div class="modal-footer d-flex justify-content-end align-items-center">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">

	/**************************** 작업 추가 시작 ****************************/
	// 작업 상위 번호 선택 select
	let selectEl = document.querySelector("#projectWorkPntNoSelectBtn");
	// 작업 멤버 리스트 선택 select
	let selectMemEmail = document.querySelector("#PWAParticipateMemEmail");
	
	// 작업 추가 )
	// 프로젝트 참여 멤버 목록 불러오기
	function f_workMemberList(){
		let memberList = projectParticipateMemberListData();
		 $('#PWAParticipateMemEmail option').remove();
		    
		let workMemberListSelectDefulat = document.createElement("option");
		workMemberListSelectDefulat.text = "담당자 선택";
		workMemberListSelectDefulat.value = "0";
		selectMemEmail.options.add(workMemberListSelectDefulat);
			
		let isWorkMemberInputFind = $(".isWorkMember").find("input");
		let isWorkMembers = [];
		for(let i=0; i<isWorkMemberInputFind.length; i++){
			isWorkMembers.push(isWorkMemberInputFind[i].dataset.workIs);
		}
		
	 	for(let i=0; i<memberList.length; i++){
	 		if(isWorkMembers.indexOf(memberList[i].memEmail) < 0){
	 			let objOption = document.createElement("option");
			    objOption.text = memberList[i].memEmail;
			    objOption.value = memberList[i].memEmail;
			    selectMemEmail.options.add(objOption);
	 		}
	    } 
	}
	
	// 작업 추가 )
	// 프로젝트 참여 멤버 목록 데이터
	function projectParticipateMemberListData(){
		let retval;
		$.ajax({
			url : "${pageContext.request.contextPath }/project/project/management/memberManagementList/${project.proCode }",
			method : "get",
			dataType : "json",
			async :false,
			success : function(resp) {
					console.log(resp.yes);
					retval = resp.yes;
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		})
		return retval;
	}
	
	// 작업 추가 )
	// 작업 추가 버튼 눌렀을 때 프로젝트 안에 작업 목록 불러오기
	$(".projectWorkInsertBtn").on("click", function(){
		let workList = projectPntUpNoWorkListData();
		$('#projectWorkPntNoSelectBtn option').remove();
		// 프로젝트 전체 목록 select문에 option으로 생성
		let workPntNoSelectDefulat = document.createElement("option");
		workPntNoSelectDefulat.text = "상위작업 없음";
		workPntNoSelectDefulat.value = "0";
		selectEl.options.add(workPntNoSelectDefulat);
		
	    for(let i=0; i<workList.length; i++){
	    	let objOption = document.createElement("option");
		    objOption.text = workList[i].workNo + " 번";
		    objOption.value = workList[i].workNo;
		    selectEl.options.add(objOption);
	    }
		
	    f_workMemberList();
	});                             
	
	// 작업 추가 )
	// 프로젝트 상위 작업 목록 List Disp Html
	let makeProjectWorkPntNoListHtml = function(workList){
		let projectWorkPntNoListHtml = "";
			for(let i=0; i < workList.length; i++){
					projectWorkPntNoListHtml += `
						<tr>
							<td>
								<input name="workPntNo" class="form-check form-check-inline" type="radio" data-work-pnt-No="\${workList[i].workNo}" value="\${workList[i].workNo}">
							</td>
							<td>
								\${workList[i].workNo}
							</td>
							<td>
								\${workList[i].workTitle}
							</td>
						</tr>
					`;
				
			
			};
		return projectWorkPntNoListHtml;
	}
	
	// 작업 추가 )
	// 프로젝트 전체 상위 작업 목록 가져오는 함수
	function projectPntUpNoWorkListData(){
		let retval;
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/pntUpWorkListView/${project.proCode}",
			method : "get",
			dataType : "json",
			async :false,
			success : function(resp) {
				console.log(resp);
				retval = resp;
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		return retval;
	}
	
	// 작업 추가 )
	// 프로젝트 상위 작업 선택 버튼 클릭 시
	$("#projectWorkPntNoSelectBtn").on("click",function(){
		$("#projectWorkPntNoDisp").empty();
		$("#projectWorkPntNoDisp").html(makeProjectWorkPntNoListHtml(projectPntUpNoWorkListData()));
	})
	
	// 작업 추가 ) 
	// 상위 작업 추가 할 때마다 발생하는 이벤트
	$("#projectWorkPntNoSelectBtn").on("change",function(){
		let selectValue = selectEl.options[selectEl.selectedIndex].value;  
		console.log(selectValue);
		if(selectValue == "0"){			
			$("#projectWorkPntNoSelectDisp").empty();
			$("#projectWorkPntNoSelectDisp").html("상위 작업이 없습니다.");
		}else{
			$("#projectWorkPntNoSelectDisp").empty();
	    	$("#projectWorkPntNoSelectDisp").html(`
				<div class="me-4 isWorkPntNo">
					<input name="workPntNo" type="hidden" value="\${selectValue}">
					<div class="btn btn-square btn-primary btn-sm isWorkPntNoRemoveBtn"><span>\${selectValue}</span></div>
					<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkPntNoRemoveBtn"><span>X</span></div>
				</div>
				`);
		}
	});
	
	// 작업 추가 )
	// 작업 담당자 선택 할 때 발생하는 이벤트
	$("#PWAParticipateMemEmail").on("change",function(){
		
		let selectValue = selectMemEmail.options[selectMemEmail.selectedIndex].value;
		console.log("sdsd",selectValue);
		let projectWorkMemberSelectListDisp = $("#projectWorkMemberSelectListDisp");
		if(selectValue == "0"){			
	    	projectWorkMemberSelectListDisp.empty();
			projectWorkMemberSelectListDisp.html("담당자가 없습니다.");
		}else if(projectWorkMemberSelectListDisp.html() == "담당자가 없습니다."){
			projectWorkMemberSelectListDisp.empty();
	    	$("#projectWorkMemberSelectListDisp").html(`
		   			<div class="me-4 isWorkMember">
		    			<input type="hidden" data-work-Is="\${selectValue}">
		    			<div class="btn btn-square btn-primary btn-sm isWorkMemberRemoveBtn"><span>\${selectValue}</span></div>
		    			<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkMemberRemoveBtn"><span>X</span></div>
		   			</div>
	   			`);
		}else{
	    	$("#projectWorkMemberSelectListDisp").append(`
	   			<div class="me-4 isWorkMember">
	    			<input type="hidden" data-work-Is="\${selectValue}">
	    			<div class="btn btn-square btn-primary btn-sm isWorkMemberRemoveBtn"><span>\${selectValue}</span></div>
	    			<div class="btn btn-secondary btn-sm isWorkRemoveBtn isWorkMemberRemoveBtn"><span>X</span></div>
	   			</div>
				`);
		}
		f_workMemberList();
	
	});
	// 작업 추가 )
	// 작업 담당자 목록에서 담당자 삭제하기
	$(document).on("click", ".isWorkRemoveBtn", function(){
		if($("div").hasClass("isWorkMemberRemoveBtn")) {
			$(this).parent().remove();
			if(!$("div").hasClass("isWorkMemberRemoveBtn")){
				$("#projectWorkMemberSelectListDisp").html("담당자가 없습니다.");
			}
			f_workMemberList();
		}
		if($("div").hasClass("isWorkPntNoRemoveBtn")) {
			$(this).parent().remove();
				if(!$("div").hasClass("isWorkPntNoRemoveBtn")){
				$("#projectWorkPntNoSelectDisp").html("상위 작업이 없습니다.");
			}
		}
		
	});
	
	// 작업 추가 )
	// 프로젝트 작업 등록
	$("#projectWorkAddBtn").on("click", function(){
		Swal.fire({
			   title: '작업 등록 하시겠습니까?',
			   text: '다시 되돌릴 수 없습니다. 신중하세요.',
			   icon: 'warning',
			   
			   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
			   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
			   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
			   confirmButtonText: '승인', // confirm 버튼 텍스트 지정
			   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
			   
			   reverseButtons: true, // 버튼 순서 거꾸로
			   
			}).then(result => {
			   // 만약 Promise리턴을 받으면,
			   if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
					let work = $(".projectWorkAddForm").serialize();
			   		console.log("등록ㅋㅋ",work);
			   
			  		$.ajax({
						url : "${pageContext.request.contextPath}/project/project/workInsert",
						method : "post",
						data : work,
						async: false,
						success : function(resp) {
							console.log(resp);
							workChargerAjax(resp);
							Swal.fire('작업 등록 완료되었습니다.', '화끈하시네요~!', 'success');
							$("#projectWorkInsertModal").modal("hide");
							location.reload();
						},
						error : function(jqXHR, status, error) {
							console.log(jqXHR);
							console.log(status);
							console.log(error);
						}
					}); 
			   }
			   else{
				   Swal.fire('', '작업 등록 취소하였습니다.', "failed");
				   return;
			   }
		});
	});
	
	// 작업 추가 )
	// 프로젝트 작업 담당자 등록
	function workChargerAjax(workNo){
		let isWorkMemberInputFind = $(".isWorkMember").find("input");
		let workChargerVO = [];
	
			for(let i=0; i<isWorkMemberInputFind.length; i++){
				let data = {
					"workNo" : workNo,
					"memEmail" : isWorkMemberInputFind[i].dataset.workIs
				};
			workChargerVO.push(data);
		}
		 
			$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workChargerInsert",
			method : "post",
			data : JSON.stringify(workChargerVO),
			contentType : "application/json;charset=utf-8",
			success : function(resp) {
				console.log(resp);
				if(resp==1){
					console.log("담당자 배정 드디어 성공")
				}else{
					console.log("담당자 배정 실패")					
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		}); 
	}
	/**************************** 작업 추가 끝 ****************************/

</script>